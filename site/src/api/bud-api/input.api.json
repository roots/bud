{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.18.19",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@container",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@core",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@extension",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@config",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@hook",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@filter",
          "syntaxKind": "block",
          "allowMultiple": true
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true,
        "@container": true,
        "@core": true,
        "@extension": true,
        "@config": true,
        "@hook": true,
        "@filter": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@roots/bud-api!",
  "docComment": "/**\n * Repository of high-level facades which simplify common configuration tasks\n *\n * @see\n *\n * https://roots.io/bud\n *\n * @see\n *\n * https://github.com/roots/bud\n *\n * @packageDocumentation\n */\n",
  "name": "@roots/bud-api",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@roots/bud-api!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@roots/bud-api!Api:class",
          "docComment": "/**\n * API service\n *\n * @remarks\n *\n * Binds facade methods to the framework and provides a means to call the methods directly for immediate execution.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Api extends "
            },
            {
              "kind": "Content",
              "text": "Framework."
            },
            {
              "kind": "Reference",
              "text": "Service",
              "canonicalReference": "@roots/bud-framework!Service:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Content",
              "text": "Framework."
            },
            {
              "kind": "Reference",
              "text": "Api",
              "canonicalReference": "@roots/bud-framework!Api:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Api",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@roots/bud-api!Api#call:member(1)",
              "docComment": "/**\n * Call an api method directly\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "call(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", ...args: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "call"
            },
            {
              "kind": "Method",
              "canonicalReference": "@roots/bud-api!Api#dump:member(1)",
              "docComment": "/**\n * dump the method call trace\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dump(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dump"
            },
            {
              "kind": "Method",
              "canonicalReference": "@roots/bud-api!Api#processQueue:member(1)",
              "docComment": "/**\n * Execute all queued method calls\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processQueue(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "processQueue"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@roots/bud-api!Facade:class",
          "docComment": "/**\n * Public interface for the Bud API\n *\n * @remarks\n *\n * Virtual class representing a synchronous interface for use in consumer configs. these type signatures are synchronous regardless of if the underlying method is.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Facade "
            }
          ],
          "releaseTag": "Public",
          "name": "Facade",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#alias:member",
              "docComment": "/**\n * Register shorthand for resolving modules using webpack aliases.\n *\n * @remarks\n *\n * Useful for situations that may otherwise require brittle relative paths.\n *\n * @example\n * ```js\n * app.alias({\n *   '@scripts': app.path('src', 'scripts'),\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alias: "
                },
                {
                  "kind": "Content",
                  "text": "alias."
                },
                {
                  "kind": "Reference",
                  "text": "facade",
                  "canonicalReference": "@roots/bud-api!facade:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "alias",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#assets:member",
              "docComment": "/**\n * Copy static assets during compilation.\n *\n * @remarks\n *\n * You may specify paths with a string literal or glob pattern.\n *\n * @example\n *\n * Copy **src/images** to **dist/images**\n * ```js\n * app.assets(['src/images'])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assets: "
                },
                {
                  "kind": "Content",
                  "text": "assets."
                },
                {
                  "kind": "Reference",
                  "text": "facade",
                  "canonicalReference": "@roots/bud-api!facade:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "assets",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#autoload:member",
              "docComment": "/**\n * Enable filename hashing of built assets.\n *\n * @example\n * ```js\n * bud.hash()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autoload: "
                },
                {
                  "kind": "Reference",
                  "text": "define",
                  "canonicalReference": "@roots/bud-api!define:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "autoload",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#config:member",
              "docComment": "/**\n * Modify the generated webpack config prior to compilation.\n *\n * @remarks\n *\n * Override generated webpack config with custom config.\n *\n * @example\n * ```ts\n * app.config({entry: './src/index.js'})\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Reference",
                  "text": "config",
                  "canonicalReference": "@roots/bud-api!config:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#copy:member",
              "docComment": "/**\n * Copy static assets during compilation.\n *\n * @remarks\n *\n * You may specify paths with a string literal or glob pattern.\n *\n * @example\n *\n * Copy **src/images** to **dist/images**\n * ```js\n * app.assets(['src/images'])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copy: "
                },
                {
                  "kind": "Content",
                  "text": "assets."
                },
                {
                  "kind": "Reference",
                  "text": "facade",
                  "canonicalReference": "@roots/bud-api!facade:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "copy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#css:member",
              "docComment": "/**\n * Generate application entrypoints from source asset paths.\n *\n * @remarks\n *\n * **Globbing**\n *\n * Uses [fast-glob](https://git.io/JkGbw) syntax.\n *\n * **Supported patterns**\n *\n * - `*` matches any number of characters, but not `/` - `?` matches a single character, but not `/` - `**` matches any number of characters, including `/`, as long as it's the only thing in a path part - `{}` allows for a comma-separated list of \"or\" expressions - `!` at the beginning of a pattern will negate the match\n *\n * @example\n *\n * Create an entrypoint from a single file:\n * ```js\n * app.entry('app', 'app.js')\n * ```\n *\n * @example\n *\n * Create an entrypoint from multiple files:\n * ```js\n * app.entry('app', ['js/app.js', 'css/app.css'])\n * ```\n *\n * @example\n *\n * Create an entrypoint comprised of all js assets:\n * ```js\n * app.entry('app', '*.js')\n * ```\n *\n * @example\n *\n * You may create more than one entrypoint using object syntax:\n * ```js\n * app.entry({\n *   scripts: '*.js',\n *   styles: ['*.css', '*.scss'],\n * })\n * ```\n *\n * @example\n *\n * Declare entrypoint dependencies:\n * ```js\n * app.entry({\n *  react: {\n *    import: ['react', 'react-dom']\n *  },\n *  app: {\n *    import: ['app.js'],\n *    dependOn: ['react'],\n *  },\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "css: "
                },
                {
                  "kind": "Reference",
                  "text": "entryFacade",
                  "canonicalReference": "@roots/bud-api!facade:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "css",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#define:member",
              "docComment": "/**\n * Define application variables\n *\n * @example\n * ```ts\n * app.define({\n *   APP_NAME: 'My Application',\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "define: "
                },
                {
                  "kind": "Reference",
                  "text": "define",
                  "canonicalReference": "@roots/bud-api!define:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "define",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#devtool:member",
              "docComment": "/**\n * Configure sourcemaps\n *\n * @remarks\n *\n * Compatible with any of [Webpack's devtool options](https://webpack.js.org/configuration/devtool/).\n *\n * @example\n * ```js\n * app.devtool('inline-cheap-module-source-map')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "devtool: "
                },
                {
                  "kind": "Reference",
                  "text": "devtool",
                  "canonicalReference": "@roots/bud-api!devtool:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "devtool",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#entry:member",
              "docComment": "/**\n * Generate application entrypoints from source asset paths.\n *\n * @remarks\n *\n * **Globbing**\n *\n * Uses [fast-glob](https://git.io/JkGbw) syntax.\n *\n * **Supported patterns**\n *\n * - `*` matches any number of characters, but not `/` - `?` matches a single character, but not `/` - `**` matches any number of characters, including `/`, as long as it's the only thing in a path part - `{}` allows for a comma-separated list of \"or\" expressions - `!` at the beginning of a pattern will negate the match\n *\n * @example\n *\n * Create an entrypoint from a single file:\n * ```js\n * app.entry('app', 'app.js')\n * ```\n *\n * @example\n *\n * Create an entrypoint from multiple files:\n * ```js\n * app.entry('app', ['js/app.js', 'css/app.css'])\n * ```\n *\n * @example\n *\n * Create an entrypoint comprised of all js assets:\n * ```js\n * app.entry('app', '*.js')\n * ```\n *\n * @example\n *\n * You may create more than one entrypoint using object syntax:\n * ```js\n * app.entry({\n *   scripts: '*.js',\n *   styles: ['*.css', '*.scss'],\n * })\n * ```\n *\n * @example\n *\n * Declare entrypoint dependencies:\n * ```js\n * app.entry({\n *  react: {\n *    import: ['react', 'react-dom']\n *  },\n *  app: {\n *    import: ['app.js'],\n *    dependOn: ['react'],\n *  },\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entry: "
                },
                {
                  "kind": "Reference",
                  "text": "entryFacade",
                  "canonicalReference": "@roots/bud-api!facade:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#experiments:member",
              "docComment": "/**\n * Configure experimental webpack options.\n *\n * @example\n * ```js\n * bud.experiments({\n *  lazyCompilation: true,\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "experiments: "
                },
                {
                  "kind": "Reference",
                  "text": "experiments",
                  "canonicalReference": "@roots/bud-api!experiments:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "experiments",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#externals:member",
              "docComment": "/**\n * Specify a non-standard resolution strategy for modules with a matching name.\n *\n * @example\n * ```js\n * bud.externals({\n *   'jQuery': 'window.jquery',\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "externals: "
                },
                {
                  "kind": "Reference",
                  "text": "externals",
                  "canonicalReference": "@roots/bud-api!externals:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "externals",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#extract:member",
              "docComment": "/**\n * Bundle vendor modules separately from application code.\n *\n * @example\n * ```js\n * bud.splitChunks({\n *  chunks: 'all',\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extract: "
                },
                {
                  "kind": "Reference",
                  "text": "splitChunks",
                  "canonicalReference": "@roots/bud-api!splitChunks:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#hash:member",
              "docComment": "/**\n * Enable filename hashing of built assets.\n *\n * @example\n * ```js\n * bud.hash()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hash: "
                },
                {
                  "kind": "Reference",
                  "text": "hash",
                  "canonicalReference": "@roots/bud-api!hash:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#js:member",
              "docComment": "/**\n * Generate application entrypoints from source asset paths.\n *\n * @remarks\n *\n * **Globbing**\n *\n * Uses [fast-glob](https://git.io/JkGbw) syntax.\n *\n * **Supported patterns**\n *\n * - `*` matches any number of characters, but not `/` - `?` matches a single character, but not `/` - `**` matches any number of characters, including `/`, as long as it's the only thing in a path part - `{}` allows for a comma-separated list of \"or\" expressions - `!` at the beginning of a pattern will negate the match\n *\n * @example\n *\n * Create an entrypoint from a single file:\n * ```js\n * app.entry('app', 'app.js')\n * ```\n *\n * @example\n *\n * Create an entrypoint from multiple files:\n * ```js\n * app.entry('app', ['js/app.js', 'css/app.css'])\n * ```\n *\n * @example\n *\n * Create an entrypoint comprised of all js assets:\n * ```js\n * app.entry('app', '*.js')\n * ```\n *\n * @example\n *\n * You may create more than one entrypoint using object syntax:\n * ```js\n * app.entry({\n *   scripts: '*.js',\n *   styles: ['*.css', '*.scss'],\n * })\n * ```\n *\n * @example\n *\n * Declare entrypoint dependencies:\n * ```js\n * app.entry({\n *  react: {\n *    import: ['react', 'react-dom']\n *  },\n *  app: {\n *    import: ['app.js'],\n *    dependOn: ['react'],\n *  },\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "js: "
                },
                {
                  "kind": "Reference",
                  "text": "entryFacade",
                  "canonicalReference": "@roots/bud-api!facade:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "js",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#minimize:member",
              "docComment": "/**\n * Enables minification of built assets.\n *\n * @example\n *\n * Enable:\n * ```js\n * bud.minimize()\n * ```\n *\n * @example\n *\n * Explicitly disable:\n * ```js\n * bud.minimize(false)\n * ```\n *\n * @example\n *\n * Explicitly enable:\n * ```js\n * bud.minimize(true)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minimize: "
                },
                {
                  "kind": "Reference",
                  "text": "minimize",
                  "canonicalReference": "@roots/bud-api!minimize:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minimize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#override:member",
              "docComment": "/**\n * Modify the generated webpack config prior to compilation.\n *\n * @remarks\n *\n * Override generated webpack config with custom config.\n *\n * @example\n * ```ts\n * app.config({entry: './src/index.js'})\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "override: "
                },
                {
                  "kind": "Reference",
                  "text": "config",
                  "canonicalReference": "@roots/bud-api!config:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "override",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#persist:member",
              "docComment": "/**\n * Cache webpack builds to the filesystem.\n *\n * @example\n * ```js\n * app.persist('memory')\n * ```\n *\n * @example\n * ```js\n * app.persist('filesystem')\n * ```\n *\n * @example\n * ```js\n * app.persist(false)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "persist: "
                },
                {
                  "kind": "Reference",
                  "text": "persist",
                  "canonicalReference": "@roots/bud-api!persist:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "persist",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#provide:member",
              "docComment": "/**\n * Make a variable/module available throughout the entire application without needing to import it explicitly.\n *\n * @example\n * ```js\n * bud.provide({\n *   jquery: '$',\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "provide: "
                },
                {
                  "kind": "Reference",
                  "text": "provide",
                  "canonicalReference": "@roots/bud-api!provide:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "provide",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#proxy:member",
              "docComment": "/**\n * Set proxy settings for the development server.\n *\n * @remarks\n *\n * - By default there is no proxy enabled.\n *\n * - If enabled with no proxies whatever is running on localhost on port 8000.\n *\n * @example\n *\n * Enable:\n * ```js\n * bud.proxy()\n * ```\n *\n * @example\n *\n * Disable:\n * ```js\n * bud.proxy({enabled: false})\n * ```\n *\n * @example\n *\n * Specify host and port:\n * ```js\n * bud.proxy({\n *  host: 'example.test',\n *  port: 3000,\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxy: "
                },
                {
                  "kind": "Reference",
                  "text": "proxy",
                  "canonicalReference": "@roots/bud-api!proxy:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "proxy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#publicPath:member",
              "docComment": "/**\n * By default it is assumed that assets are served from webroot (`/`). You can use this method to replace this value for apps served from a subdirectory.\n *\n * @example\n *\n * Set the default path for a Sage project:\n * ```js\n * bud.publicPath('/app/themes/sage/dist')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "publicPath: "
                },
                {
                  "kind": "Reference",
                  "text": "publicPath",
                  "canonicalReference": "@roots/bud-api!publicPath:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "publicPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#run:member",
              "docComment": "/**\n * Run the build\n *\n * @example\n * ```js\n * bud.run()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "run: "
                },
                {
                  "kind": "Reference",
                  "text": "run",
                  "canonicalReference": "@roots/bud-api!run:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "run",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#runtime:member",
              "docComment": "/**\n * Generate a runtime chunk intended to be inlined on the page.\n *\n * Useful for code splitting and dynamic imports.\n *\n * @example\n * ```js\n * bud.runtime()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "runtime",
                  "canonicalReference": "@roots/bud-api!runtime:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "runtime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#serve:member",
              "docComment": "/**\n * Configure development server.\n *\n * @example\n * ```js\n * app.serve({\n *   host: 'my-local-site.example',\n *   port: 5000,\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serve: "
                },
                {
                  "kind": "Reference",
                  "text": "serve",
                  "canonicalReference": "@roots/bud-api!serve:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serve",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#setPublicPath:member",
              "docComment": "/**\n * By default it is assumed that assets are served from webroot (`/`). You can use this method to replace this value for apps served from a subdirectory.\n *\n * @example\n *\n * Set the default path using a string\n * ```js\n * app.setPublicPath('/app/themes/sage/dist')\n * ```\n *\n * @example\n *\n * Set the publicPath using a function.\n * ```js\n * app.setPublicPath(publicPath => {\n *   return `web/assets/${publicPath}`\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setPublicPath: "
                },
                {
                  "kind": "Reference",
                  "text": "setPublicPath",
                  "canonicalReference": "@roots/bud-api!setPublicPath:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setPublicPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#splitChunks:member",
              "docComment": "/**\n * Bundle vendor modules separately from application code.\n *\n * @example\n * ```js\n * bud.splitChunks({\n *  chunks: 'all',\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "splitChunks: "
                },
                {
                  "kind": "Reference",
                  "text": "splitChunks",
                  "canonicalReference": "@roots/bud-api!splitChunks:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "splitChunks",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#template:member",
              "docComment": "/**\n * Enable and/or configure a generated HTML template\n *\n * @example\n * ```ts\n * app.template()\n * ```\n *\n * With configuration defaults:\n * ```ts\n * app.template({\n *   enabled: true,\n *   template: 'public/index.html',\n *   replace: {\n *     APP_NAME: name,\n *     APP_DESCRIPTION: description,\n *     PUBLIC_URL: app.env.get('PUBLIC_URL'),\n *   },\n * })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "template: "
                },
                {
                  "kind": "Reference",
                  "text": "templateFacade",
                  "canonicalReference": "@roots/bud-api!facade:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "template",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#use:member",
              "docComment": "/**\n * Register an extension or set of extensions\n *\n * @remarks\n *\n * This function is used to register an extension or set of extensions.\n *\n * - If the extension is a webpack plugin, it will be registered as a webpack plugin\n *\n * - If the extension is an array of extensions, they will be registered as webpack plugins\n *\n * @example\n *\n * Add packaged bud extensions\n * ```ts\n * bud.use([\n *   require('@roots/bud-babel'),\n *   require('@roots/bud-react'),\n * ])\n * ```\n *\n * @example\n *\n * Add a bud extension inline\n * ```ts\n * bud.use({\n *  name: 'my-webpack-plugin',\n *  make: () => new MyWebpackPlugin(),\n * })\n * ```\n *\n * @example\n *\n * Add a webpack plugin inline\n * ```ts\n * bud.use(new MyWebpackPlugin())\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "use: "
                },
                {
                  "kind": "Reference",
                  "text": "use",
                  "canonicalReference": "@roots/bud-api!use:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "use",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#version:member",
              "docComment": "/**\n * Enable filename hashing of built assets.\n *\n * @example\n * ```js\n * bud.hash()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version: "
                },
                {
                  "kind": "Reference",
                  "text": "hash",
                  "canonicalReference": "@roots/bud-api!hash:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#watch:member",
              "docComment": "/**\n * Configure the list of files that, when modified, will force the browser to reload (even in hot mode).\n *\n * @example\n * ```js\n * app.watch(['templates/*.html'])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "watch: "
                },
                {
                  "kind": "Reference",
                  "text": "watch",
                  "canonicalReference": "@roots/bud-api!watch:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "watch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@roots/bud-api!Facade#webpackConfig:member",
              "docComment": "/**\n * Modify the generated webpack config prior to compilation.\n *\n * @remarks\n *\n * Override generated webpack config with custom config.\n *\n * @example\n * ```ts\n * app.config({entry: './src/index.js'})\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "webpackConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "config",
                  "canonicalReference": "@roots/bud-api!config:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "webpackConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
