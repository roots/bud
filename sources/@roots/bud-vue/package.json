{
  "name": "@roots/bud-vue",
  "version": "0.0.0",
  "description": "Adds @vue/vue support to @roots/bud projects",
  "repository": {
    "type": "git",
    "url": "https://github.com/roots/bud.git",
    "directory": "sources/@roots/bud-vue"
  },
  "contributors": [
    {
      "name": "kellymears",
      "url": "https://github.com/kellymears"
    },
    {
      "name": "QWp6t",
      "url": "https://github.com/QWp6t"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/roots/bud/issues"
  },
  "funding": {
    "type": "github sponsors",
    "url": "https://github.com/sponsors/roots"
  },
  "engines": {
    "node": ">=14"
  },
  "keywords": [
    "bud",
    "vue"
  ],
  "bud": {
    "type": "extension"
  },
  "files": [
    "lib/",
    "types/"
  ],
  "main": "./lib/cjs/index.js",
  "module": "./lib/esm/index.js",
  "types": "./types/index.d.ts",
  "exports": {
    ".": "./lib/cjs/index.js",
    "./extension": "./lib/cjs/extension.js"
  },
  "typesVersions": {
    "*": {
      ".": [
        "./types/index.d.ts"
      ],
      "env": [
        "./types/env.d.ts"
      ],
      "extension": [
        "./types/extension.d.ts"
      ]
    }
  },
  "devDependencies": {
    "@skypack/package-check": "0.2.2",
    "@types/node": "16.11.36",
    "webpack": "5.72.1"
  },
  "dependencies": {
    "@roots/bud-babel": "workspace:sources/@roots/bud-babel",
    "@roots/bud-framework": "workspace:sources/@roots/bud-framework",
    "@vue/compiler-sfc": "3.2.36",
    "tslib": "2.4.0",
    "vue": "3.2.36",
    "vue-loader": "^17.0.0",
    "vue-style-loader": "^4.1.3",
    "vue-template-compiler": "^2.6.14"
  },
  "peerDependencies": {
    "@vue/compiler-sfc": "*",
    "vue": "*",
    "vue-loader": "*",
    "vue-style-loader": "*",
    "vue-template-compiler": "*"
  },
  "peerDependenciesMeta": {
    "@vue/compiler-sfc": {
      "optional": true
    },
    "vue": {
      "optional": true
    },
    "vue-loader": {
      "optional": true
    },
    "vue-style-loader": {
      "optional": true
    },
    "vue-template-compiler": {
      "optional": true
    }
  }
}
