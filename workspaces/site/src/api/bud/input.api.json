{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.19.4",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@todo",
          "syntaxKind": "block",
          "allowMultiple": true
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true,
        "@todo": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@roots/bud!",
  "docComment": "/**\n * ‚ö°Ô∏è Frontend build tools combining the best parts of Symfony Encore and Laravel Mix\n *\n * This package provides the Bud class and is the main entrypoint for most projects interfacing with Bud.\n *\n * @remarks\n *\n * - üíÅ Composable - Build exceptional applications with a modular, configurable build system\n *\n * - üí™ Modern - Modern framework written in TypeScript with an expressive API\n *\n * - üå± Easy - Low bundle size and fast build times\n *\n * @example\n *\n * Example configuration file (`bud.config.js`). This is run by invoking `$ bud build` in the terminal.\n * ```js\n * module.exports = app =>\n *   app\n *   .template({\n *     favicon: app.path('src', 'favicon.ico'),\n *     minify: false,\n *   })\n *   .entry('app', 'index.js')\n * ```\n *\n * @example\n *\n * Instantiate `Bud` from node using the `factory` function:\n * ```js\n * import {factory} from '@roots/bud'\n *\n * const bud = factory()\n *\n * bud.run() // run build\n * ```\n *\n * @see\n *\n * https://roots.io/bud\n *\n * @see\n *\n * https://github.com/roots/bud\n *\n * @packageDocumentation\n */\n",
  "name": "@roots/bud",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@roots/bud!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@roots/bud!Bud:class",
          "docComment": "/**\n * ‚ö°Ô∏è Bud\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Bud extends "
            },
            {
              "kind": "Reference",
              "text": "Base",
              "canonicalReference": "@roots/bud-framework!Framework:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Bud",
          "members": [],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@roots/bud!Bud:namespace",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace Bud "
            }
          ],
          "releaseTag": "Public",
          "name": "Bud",
          "members": [
            {
              "kind": "TypeAlias",
              "canonicalReference": "@roots/bud!Bud.Options:type",
              "docComment": "/**\n * Bud constructor options\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type Options = "
                },
                {
                  "kind": "Content",
                  "text": "Framework."
                },
                {
                  "kind": "Reference",
                  "text": "Options",
                  "canonicalReference": "@roots/bud-framework!Options:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "Options",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@roots/bud!extensions:function(1)",
          "docComment": "/**\n * Built-in extensions factory\n *\n * @returns Records of built-in compiler plugins\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function extensions(): "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, Extension."
            },
            {
              "kind": "Reference",
              "text": "CompilerPlugin",
              "canonicalReference": "@roots/bud-framework!CompilerPlugin:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "extensions"
        },
        {
          "kind": "Function",
          "canonicalReference": "@roots/bud!factory:function(1)",
          "docComment": "/**\n * Create a {@link Bud} instance programatically\n *\n * @returns Bud instance\n *\n * @example\n * ```ts\n * const bud = factory()\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function factory(overrides?: "
            },
            {
              "kind": "Reference",
              "text": "Bud.Options",
              "canonicalReference": "@roots/bud!Bud.Options:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Bud",
              "canonicalReference": "@roots/bud!Bud:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "overrides",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "factory"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@roots/bud!seed:var",
          "docComment": "/**\n * Bud configuration defaults\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "seed: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Store.Repository",
              "canonicalReference": "@roots/bud-framework!Store.Repository:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "seed",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        }
      ]
    }
  ]
}
