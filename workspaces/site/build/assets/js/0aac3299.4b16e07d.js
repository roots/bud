"use strict";(self.webpackChunk_roots_bud_docs=self.webpackChunk_roots_bud_docs||[]).push([[58679],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return c}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),m=p(t),c=o,f=m["".concat(l,".").concat(c)]||m[c]||d[c]||i;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function c(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var u={};for(var l in n)hasOwnProperty.call(n,l)&&(u[l]=n[l]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},81344:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return m}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),a=["components"],u={id:"bud-framework.hooks.map",title:"map type",sidebar_label:"map type",hide_title:!0,sidebar:"api",slug:"map"},l=void 0,p={unversionedId:"bud-framework/hooks/bud-framework.hooks.map",id:"bud-framework/hooks/bud-framework.hooks.map",title:"map type",description:"Hooks.Map type",source:"@site/api/bud-framework/hooks/map.md",sourceDirName:"bud-framework/hooks",slug:"/bud-framework/hooks/map",permalink:"/api/bud-framework/hooks/map",tags:[],version:"current",frontMatter:{id:"bud-framework.hooks.map",title:"map type",sidebar_label:"map type",hide_title:!0,sidebar:"api",slug:"map"},sidebar:"sidebar",previous:{title:"limitedplugin type",permalink:"/api/bud-framework/hooks/limitedplugin"},next:{title:"on() method",permalink:"/api/bud-framework/hooks/on"}},s=[{value:"Hooks.Map type",id:"hooksmap-type",children:[],level:2}],d={toc:s};function m(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"hooksmap-type"},"Hooks.Map type"),(0,i.kt)("p",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'export type Map = {\n  [`build`]: Record<string, any>;\n  [`build.bail`]: boolean;\n  [`build.cache`]: any;\n  ["build.cache.buildDependencies"]: Record<string, Array<string>>;\n  ["build.cache.cacheDirectory"]: string;\n  [`build.cache.version`]: string;\n  ["build.cache.type"]: "memory" | "filesystem";\n  ["build.cache.managedPaths"]: Array<string>;\n  [`build.context`]: Configuration["context"];\n  [`build.devtool`]: Configuration["devtool"];\n  [`build.entry`]: LimitedEntryObject;\n  [`build.experiments`]: Configuration["experiments"];\n  [`build.externals`]: Configuration["externals"];\n  [`build.infrastructureLogging`]: Configuration["infrastructureLogging"];\n  [`build.mode`]: Configuration["mode"];\n  [`build.module`]: Configuration["module"];\n  [`build.module.rules`]: Configuration["module"]["rules"];\n  [`build.module.rules.oneOf`]: Array<RuleSetRule>;\n  [`build.module.rules.before`]: Array<RuleSetRule>;\n  [`build.module.rules.after`]: Array<RuleSetRule>;\n  [`build.name`]: Configuration["name"];\n  [`build.node`]: Configuration["node"];\n  [`build.optimization`]: Configuration["optimization"];\n  [`build.optimization.emitOnErrors`]: Configuration["optimization"]["emitOnErrors"];\n  [`build.optimization.minimize`]: Configuration["optimization"]["minimize"];\n  [`build.optimization.minimizer`]: Configuration["optimization"]["minimizer"];\n  [`build.optimization.moduleIds`]: Configuration["optimization"]["moduleIds"];\n  [`build.optimization.removeEmptyChunks`]: Configuration["optimization"]["removeEmptyChunks"];\n  [`build.optimization.runtimeChunk`]: Configuration["optimization"]["runtimeChunk"];\n  [`build.optimization.splitChunks`]: any;\n  [`build.output`]: Configuration["output"];\n  [`build.output.assetModuleFilename`]: Configuration["output"]["assetModuleFilename"];\n  [`build.output.chunkFilename`]: Configuration["output"]["chunkFilename"];\n  [`build.output.clean`]: Configuration["output"]["clean"];\n  [`build.output.filename`]: Configuration["output"]["filename"];\n  [`build.output.path`]: Configuration["output"]["path"];\n  [`build.output.pathinfo`]: Configuration["output"]["pathinfo"];\n  [`build.output.publicPath`]: string;\n  [`build.parallelism`]: Configuration["parallelism"];\n  [`build.performance`]: Configuration["performance"];\n  [`build.plugins`]: LimitedPlugin;\n  [`build.profile`]: Configuration["profile"];\n  [`build.recordsPath`]: Configuration["recordsPath"];\n  [`build.resolve`]: Configuration["resolve"];\n  [`build.resolve.alias`]: {\n    [index: string]: string | false | string[];\n  };\n  [`build.resolve.extensions`]: Configuration["resolve"]["extensions"];\n  [`build.resolve.modules`]: Configuration["resolve"]["modules"];\n  [`build.stats`]: Configuration["stats"];\n  [`build.target`]: Configuration["target"];\n  [`build.watch`]: Configuration["watch"];\n  [`build.watchOptions`]: Configuration["watchOptions"];\n  [`extension`]: ValueOf<Plugins> | ValueOf<Modules>;\n  [`location.src`]: string;\n  [`location.dist`]: string;\n  [`location.project`]: string;\n  [`location.modules`]: string;\n  [`location.storage`]: string;\n  [`config.override`]: Configuration[];\n  [`event.app.close`]: unknown;\n  [`event.build.make.before`]: unknown;\n  [`event.build.make.after`]: unknown;\n  [`event.build.override`]: Configuration;\n  [`event.compiler.before`]: Array<Framework>;\n  [`event.compiler.done`]: Stats;\n  [`event.compiler.after`]: Framework;\n  [`event.compiler.stats`]: StatsCompilation;\n  [`event.compiler.error`]: Error;\n  [`event.dashboard.done`]: void;\n  [`event.dashboard.q`]: void;\n  [`event.dashboard.c`]: void;\n  [`event.project.write`]: Framework["project"];\n  [`event.server.listen`]: Framework["server"];\n  [`event.server.before`]: Framework;\n  [`event.server.after`]: Framework;\n  [`event.run`]: Framework;\n  [`proxy.target`]: string;\n  [`proxy.interceptor`]: (\n    buffer: Buffer,\n    proxyRes: IncomingMessage,\n    req: IncomingMessage,\n    res: ServerResponse\n  ) => Promise<Buffer | string>;\n  [`proxy.replace`]: Array<[string | RegExp, string]>;\n  [`proxy.options`]?: ProxyOptions;\n  [key: `extension.${string}`]: any;\n};\n')),(0,i.kt)("p",null,"References: ",(0,i.kt)("a",{parentName:"p",href:"/api/bud-framework/plugins"},"Plugins"),", ",(0,i.kt)("a",{parentName:"p",href:"//bud-framework/modules"},"Modules"),", ",(0,i.kt)("a",{parentName:"p",href:"//bud-framework/framework"},"Framework")))}m.isMDXComponent=!0}}]);