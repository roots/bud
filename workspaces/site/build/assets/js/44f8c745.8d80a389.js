"use strict";(self.webpackChunk_roots_bud_docs=self.webpackChunk_roots_bud_docs||[]).push([[8490],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return g}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=u(n),g=a,m=c["".concat(l,".").concat(g)]||c[g]||p[g]||i;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},68182:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=n(26396),s=n(58215),l=["components"],u={sidebar_label:"Adding entrypoints",description:"Part 4/7 of the Getting Started guide covers adding entrypoints to your build",sidebar_position:5,image:"https://budjs.netlify.app/img/share/guides/getting-started__config.png"},d="Adding a new entrypoint",p={unversionedId:"getting-started/entrypoints",id:"getting-started/entrypoints",title:"Adding a new entrypoint",description:"Part 4/7 of the Getting Started guide covers adding entrypoints to your build",source:"@site/guides/getting-started/entrypoints.mdx",sourceDirName:"getting-started",slug:"/getting-started/entrypoints",permalink:"/guides/getting-started/entrypoints",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_label:"Adding entrypoints",description:"Part 4/7 of the Getting Started guide covers adding entrypoints to your build",sidebar_position:5,image:"https://budjs.netlify.app/img/share/guides/getting-started__config.png"},sidebar:"sidebar",previous:{title:"Creating a config file",permalink:"/guides/getting-started/config"},next:{title:"Adding extensions",permalink:"/guides/getting-started/extending"}},c=[{value:"Add a second script",id:"add-a-second-script",children:[],level:2},{value:"Two steps forward, one step back",id:"two-steps-forward-one-step-back",children:[],level:2},{value:"Adding files to an existing entrypoint",id:"adding-files-to-an-existing-entrypoint",children:[],level:2},{value:"Specifying entrypoints as an object",id:"specifying-entrypoints-as-an-object",children:[],level:2}],g={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"adding-a-new-entrypoint"},"Adding a new entrypoint"),(0,i.kt)("p",null,"What if we want to add another script to our project, which should be built and output separately? Let's try it."),(0,i.kt)("h2",{id:"add-a-second-script"},"Add a second script"),(0,i.kt)("p",null,"Add a new script to your project at ",(0,i.kt)("strong",{parentName:"p"},"src/landing.js"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='src/landing.js'",title:"'src/landing.js'"},"console.log('landing page script')\n")),(0,i.kt)("p",null,"To build it, specify the new script in ",(0,i.kt)("strong",{parentName:"p"},"bud.config.js")," using ",(0,i.kt)("a",{parentName:"p",href:"/docs/bud.entry"},(0,i.kt)("strong",{parentName:"a"},"bud.entry")),"."),(0,i.kt)(o.Z,{groupId:"lang",defaultValue:"js",values:[{label:"Javascript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"{3} title='bud.config.js'","{3}":!0,title:"'bud.config.js'"},"module.exports = bud =>\n  bud.entry('landing', 'landing.js').template()\n"))),(0,i.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5} title='bud.config.js'","{5}":!0,title:"'bud.config.js'"},"import type {Framework} from '@roots/bud'\n\nexport default function (bud: Framework): void {\n  bud.entry('landing', 'landing.js').template()\n}\n")))),(0,i.kt)("h2",{id:"two-steps-forward-one-step-back"},"Two steps forward, one step back"),(0,i.kt)("p",null,"If you run a build now you'll see your new file was compiled, but you might also notice that ",(0,i.kt)("strong",{parentName:"p"},"dist/main.js")," is missing."),(0,i.kt)("p",null,"Until now, we'd been successfully relying on bud's implicit inclusion of ",(0,i.kt)("strong",{parentName:"p"},"src/index.js"),", which it will attempt to use if ",(0,i.kt)("a",{parentName:"p",href:"/docs/bud.entry"},(0,i.kt)("strong",{parentName:"a"},"bud.entry"))," is not called."),(0,i.kt)("p",null,"But now that we are ",(0,i.kt)("a",{parentName:"p",href:"#add-a-second-script"},"specifying an entrypoint in our config"),", we'll need to explicitly specify ",(0,i.kt)("strong",{parentName:"p"},"src/index.js")," as well."),(0,i.kt)(o.Z,{groupId:"lang",defaultValue:"js",values:[{label:"Javascript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"{3} title='bud.config.js'","{3}":!0,title:"'bud.config.js'"},"module.exports = bud =>\n  bud\n    .entry('main', 'index.js')\n    .entry('landing', 'landing.js')\n    .template()\n"))),(0,i.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5} title='bud.config.js'","{5}":!0,title:"'bud.config.js'"},"import type {Framework} from '@roots/bud'\n\nexport default function (bud: Framework): void {\n  bud\n    .entry('main', 'index.js')\n    .entry('landing', 'landing.js')\n    .template()\n}\n")))),(0,i.kt)("h2",{id:"adding-files-to-an-existing-entrypoint"},"Adding files to an existing entrypoint"),(0,i.kt)("p",null,"Currently, we are importing our application css by importing it into the ",(0,i.kt)("strong",{parentName:"p"},"src/index.js")," entrypoint."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"{1} title='src/index.js'","{1}":!0,title:"'src/index.js'"},"import './index.css'\n\nconsole.log('hello, world.')\n")),(0,i.kt)("p",null,"This is a totally valid way to handle css in your build, but let's instead specify the css file in ",(0,i.kt)("strong",{parentName:"p"},"bud.config.js")," so we can keep learning about how to work with it."),(0,i.kt)("p",null,"Start by removing the css import from ",(0,i.kt)("strong",{parentName:"p"},"src/index.js")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"{1-2} title='src/index.js'","{1-2}":!0,title:"'src/index.js'"},"console.log('hello world!')\n")),(0,i.kt)("p",null,"Now, add the css to the ",(0,i.kt)("strong",{parentName:"p"},"main")," entry."),(0,i.kt)(o.Z,{groupId:"lang",defaultValue:"js",values:[{label:"Javascript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"{3} title='bud.config.js'","{3}":!0,title:"'bud.config.js'"},"module.exports = bud =>\n  bud\n    .entry('main', ['index.js', 'index.css'])\n    .entry('landing', 'landing.js')\n    .template()\n"))),(0,i.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5} title='bud.config.ts'","{5}":!0,title:"'bud.config.ts'"},"import type {Framework} from '@roots/bud'\n\nexport default function (bud: Framework): void {\n  bud\n    .entry('main', ['index.js', 'index.css'])\n    .entry('landing', 'landing.js')\n    .template()\n}\n")))),(0,i.kt)("p",null,"As you can see, ",(0,i.kt)("a",{parentName:"p",href:"/docs/bud.entry"},(0,i.kt)("strong",{parentName:"a"},"bud.entry")),"'s second parameter can be either a ",(0,i.kt)("strong",{parentName:"p"},"string")," or an ",(0,i.kt)("strong",{parentName:"p"},"array"),", and we're using the ",(0,i.kt)("strong",{parentName:"p"},"array")," so we can specify multiple files."),(0,i.kt)("h2",{id:"specifying-entrypoints-as-an-object"},"Specifying entrypoints as an object"),(0,i.kt)("p",null,"While we can call ",(0,i.kt)("a",{parentName:"p",href:"/docs/bud.entry"},(0,i.kt)("strong",{parentName:"a"},"bud.entry"))," as many times as we need, we can also specify all of our entrypoints in one call using object syntax."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"{3-6} title='bud.config.js'","{3-6}":!0,title:"'bud.config.js'"},"module.exports = bud =>\n  bud\n    .entry({\n      main: ['index.js', 'index.css'],\n      landing: 'landing.js',\n    })\n    .template()\n")),(0,i.kt)("p",null,"Subsequent calls to ",(0,i.kt)("a",{parentName:"p",href:"/docs/bud.entry"},(0,i.kt)("strong",{parentName:"a"},"bud.entry"))," will merge our existing entrypoints with our new ones, rather than overwriting everything. So this is safe and functionally equivalent:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"{3-4} title='bud.config.js'","{3-4}":!0,title:"'bud.config.js'"},"module.exports = bud =>\n  bud\n    .entry({main: ['index.js', 'index.css']})\n    .entry({landing: 'landing.js'})\n    .template()\n")))}m.isMDXComponent=!0},58215:function(e,t,n){var r=n(67294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},26396:function(e,t,n){n.d(t,{Z:function(){return c}});var r=n(87462),a=n(67294),i=n(72389),o=n(79443);var s=function(){var e=(0,a.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=n(63616),u=n(86010),d="tabItem_1uMI";function p(e){var t,n,i,o=e.lazy,p=e.block,c=e.defaultValue,g=e.values,m=e.groupId,f=e.className,b=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=g?g:b.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,l.lx)(y,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===c?c:null!=(t=null!=c?c:null==(n=b.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(i=b[0])?void 0:i.props.value;if(null!==k&&!y.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var h=s(),j=h.tabGroupChoices,w=h.setTabGroupChoices,x=(0,a.useState)(k),N=x[0],T=x[1],O=[],E=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var Z=j[m];null!=Z&&Z!==N&&y.some((function(e){return e.value===Z}))&&T(Z)}var I=function(e){var t=e.currentTarget,n=O.indexOf(t),r=y[n].value;r!==N&&(E(t),T(r),null!=m&&w(m,r))},P=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=O.indexOf(e.currentTarget)+1;n=O[r]||O[0];break;case"ArrowLeft":var a=O.indexOf(e.currentTarget)-1;n=O[a]||O[O.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":p},f)},y.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:function(e){return O.push(e)},onKeyDown:P,onFocus:I,onClick:I},i,{className:(0,u.Z)("tabs__item",d,null==i?void 0:i.className,{"tabs__item--active":N===t})}),null!=n?n:t)}))),o?(0,a.cloneElement)(b.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},b.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==N})}))))}function c(e){var t=(0,i.Z)();return a.createElement(p,(0,r.Z)({key:String(t)},e))}}}]);