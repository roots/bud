"use strict";(self.webpackChunk_roots_bud_docs=self.webpackChunk_roots_bud_docs||[]).push([[77835],{30920:function(n,e,t){t.r(e),t.d(e,{contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return d},metadata:function(){return p},toc:function(){return m}});var i=t(87462),a=t(63366),s=(t(67294),t(3905)),o=t(19055),r=t(26396),l=t(58215),u=["components"],d={title:"Writing an extension",description:"Create and package an extension to reuse across projects and share with other users",sidebar_label:"Writing an extension",sidebar_position:3,image:"https://budjs.netlify.app/img/share/guides/advanced-use__writing-an-extension.png"},c=void 0,p={unversionedId:"advanced-use/writing-an-extension",id:"advanced-use/writing-an-extension",title:"Writing an extension",description:"Create and package an extension to reuse across projects and share with other users",source:"@site/guides/advanced-use/writing-an-extension.mdx",sourceDirName:"advanced-use",slug:"/advanced-use/writing-an-extension",permalink:"/guides/advanced-use/writing-an-extension",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Writing an extension",description:"Create and package an extension to reuse across projects and share with other users",sidebar_label:"Writing an extension",sidebar_position:3,image:"https://budjs.netlify.app/img/share/guides/advanced-use__writing-an-extension.png"},sidebar:"sidebar",previous:{title:"Node API",permalink:"/guides/advanced-use/node"},next:{title:"Introduction",permalink:"/guides/bud-cli/"}},m=[{value:"Extensions.Module",id:"extensionsmodule",children:[{value:"Example (@roots/bud-tailwindcss)",id:"example-rootsbud-tailwindcss",children:[],level:3}],level:2},{value:"Extensions.WebpackPlugin",id:"extensionswebpackplugin",children:[],level:2}],f={toc:m};function g(n){var e=n.components,t=(0,a.Z)(n,u);return(0,s.kt)("wrapper",(0,i.Z)({},f,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Extensions documentation is a work-in-progress."))),(0,s.kt)("p",null,"There are two types of extensions:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"A ",(0,s.kt)("a",{parentName:"li",href:"#extensions.module"},"Module"),": A generic extension. Used for adding config functions, loaders, rules, etc."),(0,s.kt)("li",{parentName:"ul"},"A ",(0,s.kt)("a",{parentName:"li",href:"#extensions.webpackplugin"},"WebpackPlugin"),": An extension wrapping a ",(0,s.kt)("inlineCode",{parentName:"li"},"Webpack.WebpackPluginInstance"),".")),(0,s.kt)("h2",{id:"extensionsmodule"},"Extensions.Module"),(0,s.kt)("h3",{id:"example-rootsbud-tailwindcss"},"Example (@roots/bud-tailwindcss)"),(0,s.kt)("p",null,"The ",(0,s.kt)("a",{parentName:"p",href:"/extensions/bud-tailwindcss"},"@roots/bud-tailwindcss")," extension:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"registers a function ",(0,s.kt)("inlineCode",{parentName:"li"},"bud.tailwind")," that configures ",(0,s.kt)("a",{parentName:"li",href:"/extensions/bud-postcss"},"@roots/bud-postcss"),"."),(0,s.kt)("li",{parentName:"ul"},"On ",(0,s.kt)("inlineCode",{parentName:"li"},"boot")," it calls that ",(0,s.kt)("inlineCode",{parentName:"li"},"function")," if peer requirements are met.")),(0,s.kt)(r.Z,{defaultValue:"index.ts",values:[{label:"index.ts",value:"index.ts"},{label:"tailwind.service.ts",value:"tailwind.service.ts"},{label:"tailwind.config.ts",value:"tailwind.config.ts"}],mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"index.ts",mdxType:"TabItem"},(0,s.kt)(o.Z,{className:"language-ts",title:"index.js",mdxType:"CodeBlock"},"// Copyright (c) Roots Foundation, LLC. All rights reserved.\n// Licensed under the MIT license.\n\n/**\n * Adds tailwindcss support to Bud\n *\n * @see https://roots.io/bud\n * @see https://github.com/roots/bud\n *\n * @remarks\n * - \ud83d\udc81 Composable - Build exceptional web applications using a modular, hackable build system\n *\n * - \ud83d\udcaa Modern - Modern framework that scales from a single file to thousands of lines of code\n *\n * - \ud83c\udf31 Easy - Low bundle size and fast build times with little to no configuration\n *\n * @packageDocumentation\n */\n\nimport type {tailwind} from './bud.tailwind'\nimport {BudTailwindCssExtension} from './tailwind.extension'\n\ndeclare module '@roots/bud-framework' {\n  interface Framework {\n    tailwind: typeof tailwind\n  }\n\n  interface Modules {\n    '@roots/bud-tailwindcss': typeof BudTailwindCssExtension\n  }\n}\n\nexport const {name, api, boot} = BudTailwindCssExtension\n")),(0,s.kt)(l.Z,{value:"tailwind.service.ts",mdxType:"TabItem"},(0,s.kt)(o.Z,{className:"language-ts",title:"tailwind.service.ts",mdxType:"CodeBlock"},"import type {Extension, Framework} from '@roots/bud-framework'\nimport {chalk, lodash} from '@roots/bud-support'\n\nimport {tailwind} from './bud.tailwind'\nimport * as requirements from './tailwind.requirements'\n\nconst {isUndefined} = lodash\n\nexport interface BudTailwindCssExtension\n  extends Extension.Module {\n  name: '@roots/bud-tailwindcss'\n  api: {tailwind}\n  boot: (app: Framework) => Promise<void>\n}\n\n/**\n * Load user configuration path\n *\n * @internal\n */\nconst getVerifiedUserConfigPath = async function (\n  this: Framework,\n): Promise<string> {\n  try {\n    const configPath = this.path('project', 'tailwind.config.js')\n\n    await import(configPath)\n\n    this.success(\n      `loaded user tailwindcss config from ${chalk.green(\n        configPath,\n      )}`,\n    )\n\n    return configPath\n  } catch (e) {\n    this.error({\n      message:\n        '@roots/bud-tailwindcss failed to load user config',\n    })\n    return null\n  }\n}\n\n/**\n * TailwindCSS Extension\n *\n * @public\n */\nexport const BudTailwindCssExtension: BudTailwindCssExtension = {\n  /**\n   * @public\n   */\n  name: '@roots/bud-tailwindcss',\n\n  /**\n   * @public\n   */\n  api: {tailwind},\n\n  /**\n   * @public\n   */\n  boot: async app => {\n    const log = app.logger.instance.scope(\n      ...app.logger.context,\n      'extensions',\n      'tailwindcss',\n    )\n\n    if (isUndefined(app.postcss)) {\n      log.error(\n        '@roots/bud-tailwindcss has missing dependencies',\n        'exiting early.',\n      )\n      return\n    }\n\n    const meetsRequirements = await requirements.verify()\n    if (!meetsRequirements) {\n      log.error(\n        '@roots/bud-tailwindcss has missing dependencies',\n        'exiting early.',\n      )\n      return\n    }\n\n    try {\n      const tailwindcss = await import('tailwindcss')\n      const {default: nesting} = await import(\n        'tailwindcss/nesting/index.js'\n      )\n\n      const config: string | null =\n        await getVerifiedUserConfigPath.bind(app)()\n\n      app.postcss.setPlugins({\n        'postcss-import': app.postcss.get('postcss-import'),\n        'tailwindcss-nesting': [nesting],\n        tailwindcss: config\n          ? [tailwindcss.default, config]\n          : tailwindcss.default,\n        'postcss-preset-env': app.postcss.get(\n          'postcss-preset-env',\n        ),\n      })\n\n      log.success('postcss has been configured for tailwindcss')\n    } catch (e) {\n      log.error({message: e})\n    }\n  },\n}\n")),(0,s.kt)(l.Z,{value:"tailwind.config.ts",mdxType:"TabItem"},(0,s.kt)(o.Z,{className:"language-ts",title:"tailwind.config.ts",mdxType:"CodeBlock"},"import type {Framework} from '@roots/bud-framework'\nimport type {TailwindConfig} from 'tailwindcss/tailwind-config'\n\nexport interface tailwind {\n  (config?: TailwindConfig): Framework\n}\n\n/**\n * Configure tailwindcss.\n *\n * @example\n * ```js\n * bud.tailwind('tailwind.config.js')\n * ```\n *\n * ```js\n * bud.tailwind({\n *   theme: {\n *     // etc\n *   }\n * })\n * ```\n *\n * @public\n */\nexport const tailwind: tailwind = function (config?) {\n  this as Framework\n\n  try {\n    this.postcss.setPluginOption('tailwindcss', config)\n    return this\n  } catch (error) {\n    this.error(error)\n    return this\n  }\n}\n"))),(0,s.kt)("h2",{id:"extensionswebpackplugin"},"Extensions.WebpackPlugin"),(0,s.kt)("p",null,"A ",(0,s.kt)("a",{parentName:"p",href:"#extensions.webpackplugin"},"WebpackPlugin")," extends the ",(0,s.kt)("a",{parentName:"p",href:"#extensions.module"},"Module")," type, so it can do everything a ",(0,s.kt)("a",{parentName:"p",href:"#extensions.module"},"Module")," can."),(0,s.kt)("p",null,"It ",(0,s.kt)("em",{parentName:"p"},"must")," fulfill one of two requirements:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Use ",(0,s.kt)("inlineCode",{parentName:"li"},"make")," and return a ",(0,s.kt)("inlineCode",{parentName:"li"},"Webpack.WebpackPluginInstance"),", or;"),(0,s.kt)("li",{parentName:"ul"},"Use ",(0,s.kt)("inlineCode",{parentName:"li"},"apply")," (",(0,s.kt)("inlineCode",{parentName:"li"},"Webpack.WebpackPluginInstance['apply']"),") directly (the extension is essentially a superset of ",(0,s.kt)("inlineCode",{parentName:"li"},"Webpack.WebpackPluginInstance"),").")),(0,s.kt)("p",null,"In general, you would include ",(0,s.kt)("inlineCode",{parentName:"p"},"make")," if you are wrapping a webpack plugin and ",(0,s.kt)("inlineCode",{parentName:"p"},"apply")," if you are writing a ",(0,s.kt)("inlineCode",{parentName:"p"},"Webpack.WebpackPlugin")," specific to your extension."),(0,s.kt)("p",null,"None of ",(0,s.kt)("a",{parentName:"p",href:"/extensions"},"the first-party extensions")," use ",(0,s.kt)("inlineCode",{parentName:"p"},"apply")," even though some of them have an accompanying ",(0,s.kt)("inlineCode",{parentName:"p"},"Webpack.WebpackPlugin"),".\nInstead, the plugin is packaged separately from the extension (in case someone wants to use the plugin directly). This is the recommended approach."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"")))}g.isMDXComponent=!0},58215:function(n,e,t){var i=t(67294);e.Z=function(n){var e=n.children,t=n.hidden,a=n.className;return i.createElement("div",{role:"tabpanel",hidden:t,className:a},e)}},26396:function(n,e,t){t.d(e,{Z:function(){return p}});var i=t(87462),a=t(67294),s=t(72389),o=t(79443);var r=function(){var n=(0,a.useContext)(o.Z);if(null==n)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return n},l=t(63616),u=t(86010),d="tabItem_1uMI";function c(n){var e,t,s,o=n.lazy,c=n.block,p=n.defaultValue,m=n.values,f=n.groupId,g=n.className,h=a.Children.map(n.children,(function(n){if((0,a.isValidElement)(n)&&void 0!==n.props.value)return n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof n.type?n.type:n.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),w=null!=m?m:h.map((function(n){var e=n.props;return{value:e.value,label:e.label,attributes:e.attributes}})),k=(0,l.lx)(w,(function(n,e){return n.value===e.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(n){return n.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===p?p:null!=(e=null!=p?p:null==(t=h.find((function(n){return n.props.default})))?void 0:t.props.value)?e:null==(s=h[0])?void 0:s.props.value;if(null!==b&&!w.some((function(n){return n.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+w.map((function(n){return n.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=r(),x=v.tabGroupChoices,y=v.setTabGroupChoices,N=(0,a.useState)(b),C=N[0],T=N[1],E=[],P=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var I=x[f];null!=I&&I!==C&&w.some((function(n){return n.value===I}))&&T(I)}var W=function(n){var e=n.currentTarget,t=E.indexOf(e),i=w[t].value;i!==C&&(P(e),T(i),null!=f&&y(f,i))},M=function(n){var e,t=null;switch(n.key){case"ArrowRight":var i=E.indexOf(n.currentTarget)+1;t=E[i]||E[0];break;case"ArrowLeft":var a=E.indexOf(n.currentTarget)-1;t=E[a]||E[E.length-1]}null==(e=t)||e.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":c},g)},w.map((function(n){var e=n.value,t=n.label,s=n.attributes;return a.createElement("li",(0,i.Z)({role:"tab",tabIndex:C===e?0:-1,"aria-selected":C===e,key:e,ref:function(n){return E.push(n)},onKeyDown:M,onFocus:W,onClick:W},s,{className:(0,u.Z)("tabs__item",d,null==s?void 0:s.className,{"tabs__item--active":C===e})}),null!=t?t:e)}))),o?(0,a.cloneElement)(h.filter((function(n){return n.props.value===C}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},h.map((function(n,e){return(0,a.cloneElement)(n,{key:e,hidden:n.props.value!==C})}))))}function p(n){var e=(0,s.Z)();return a.createElement(c,(0,i.Z)({key:String(e)},n))}}}]);