"use strict";(self.webpackChunk_roots_bud_docs=self.webpackChunk_roots_bud_docs||[]).push([[96084],{27946:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return d}});var o=t(87462),l=t(63366),a=(t(67294),t(3905)),i=(t(26396),t(58215),t(19055)),r=["components"],u={title:"bud build",description:"CLI command to compile project assets",sidebar_label:"bud build",slug:"build",image:"https://budjs.netlify.app/img/share/guides/bud-cli__build.png"},s=void 0,c={unversionedId:"bud-cli/bud-build",id:"bud-cli/bud-build",title:"bud build",description:"CLI command to compile project assets",source:"@site/guides/bud-cli/02-bud-build.mdx",sourceDirName:"bud-cli",slug:"/bud-cli/build",permalink:"/guides/bud-cli/build",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"bud build",description:"CLI command to compile project assets",sidebar_label:"bud build",slug:"build",image:"https://budjs.netlify.app/img/share/guides/bud-cli__build.png"},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/guides/bud-cli/"},next:{title:"bud clean",permalink:"/guides/bud-cli/clean"}},d=[],v={toc:d};function p(e){var n=e.components,t=(0,l.Z)(e,r);return(0,a.kt)("wrapper",(0,o.Z)({},v,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(i.Z,{title:"$ yarn bud build --help",mdxType:"CodeBlock"},"```sh\ncompile source assets\n\nUSAGE\n  $ bud build [-h] [--version] [--log] [--log.level v|vv|vvv|vvvv]\n    [--log.papertrail] [--log.min] [--log.secret <value>] [--target <value>]\n    [--location.src <value>] [--location.dist <value>] [--location.project\n    <value>] [--location.publicPath <value>] [--location.storage <value>]\n    [--location.modules <value>] [--cache] [--cache.type\n    filesystem|memory|false] [--clean] [--config <value>] [--dashboard]\n    [--devtool <value>] [--html] [--hash] [--inject] [--manifest] [--minimize]\n    [--splitChunks] [--vendor] [--runtime]\n\nFLAGS\n  -h, --help                     Show CLI help.\n  --[no-]cache                   cache built modules to the filesystem\n  --cache.type=<option>          [default: filesystem]\n                                 <options: filesystem|memory|false>\n  --[no-]clean                   clean dist directory before compiling\n  --config=<value>               path to config file\n  --[no-]dashboard               enable bud dashboard\n  --devtool=<value>              specify source-map type\n  --[no-]hash                    hash compiled filenames\n  --[no-]html                    generate an html template\n  --[no-]inject                  automatically register & boot extensions\n  --location.dist=<value>        distribution directory\n  --location.modules=<value>     public path\n  --location.project=<value>     repo root path\n  --location.publicPath=<value>  public path\n  --location.src=<value>         source directory\n  --location.storage=<value>     storage directory\n  --[no-]log                     log to console\n  --log.level=<option>           [default: vvv] set log verbosity. `v` is error\n                                 level. `vv` is warning level. `vvv` is log\n                                 level. `vvvv` is debug level.\n                                 <options: v|vv|vvv|vvvv>\n  --[no-]log.min                 remove formatting from logged objects\n  --[no-]log.papertrail          preserve logger output\n  --log.secret=<value>...        [default: /Users/kellymears/code/roots/dev/bud/\n                                 examples/babel] hide matching strings from\n                                 logging output\n  --[no-]manifest                emit manifest.json\n  --[no-]minimize                minimize file size of compiled assets\n  --[no-]runtime                 Create a runtime chunk\n  --[no-]splitChunks             create separate chunks for vendor and app code\n  --target=<value>...            [default: ] limit compilation to this compiler\n  --[no-]vendor                  create separate chunks for vendor and app code;\n                                 alias for splitChunks\n  --version                      Show CLI version.\n\nDESCRIPTION\n  compile source assets\n\nEXAMPLES\n  $ bud build\n\n  $ bud build --cache\n```"))}p.isMDXComponent=!0},58215:function(e,n,t){var o=t(67294);n.Z=function(e){var n=e.children,t=e.hidden,l=e.className;return o.createElement("div",{role:"tabpanel",hidden:t,className:l},n)}},26396:function(e,n,t){t.d(n,{Z:function(){return v}});var o=t(87462),l=t(67294),a=t(72389),i=t(79443);var r=function(){var e=(0,l.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=t(63616),s=t(86010),c="tabItem_1uMI";function d(e){var n,t,a,i=e.lazy,d=e.block,v=e.defaultValue,p=e.values,m=e.groupId,b=e.className,f=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=p?p:f.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),g=(0,u.lx)(h,(function(e,n){return e.value===n.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===v?v:null!=(n=null!=v?v:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(a=f[0])?void 0:a.props.value;if(null!==y&&!h.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=r(),C=k.tabGroupChoices,w=k.setTabGroupChoices,E=(0,l.useState)(y),_=E[0],I=E[1],T=[],x=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var j=C[m];null!=j&&j!==_&&h.some((function(e){return e.value===j}))&&I(j)}var N=function(e){var n=e.currentTarget,t=T.indexOf(n),o=h[t].value;o!==_&&(x(n),I(o),null!=m&&w(m,o))},Z=function(e){var n,t=null;switch(e.key){case"ArrowRight":var o=T.indexOf(e.currentTarget)+1;t=T[o]||T[0];break;case"ArrowLeft":var l=T.indexOf(e.currentTarget)-1;t=T[l]||T[T.length-1]}null==(n=t)||n.focus()};return l.createElement("div",{className:"tabs-container"},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":d},b)},h.map((function(e){var n=e.value,t=e.label,a=e.attributes;return l.createElement("li",(0,o.Z)({role:"tab",tabIndex:_===n?0:-1,"aria-selected":_===n,key:n,ref:function(e){return T.push(e)},onKeyDown:Z,onFocus:N,onClick:N},a,{className:(0,s.Z)("tabs__item",c,null==a?void 0:a.className,{"tabs__item--active":_===n})}),null!=t?t:n)}))),i?(0,l.cloneElement)(f.filter((function(e){return e.props.value===_}))[0],{className:"margin-vert--md"}):l.createElement("div",{className:"margin-vert--md"},f.map((function(e,n){return(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==_})}))))}function v(e){var n=(0,a.Z)();return l.createElement(d,(0,o.Z)({key:String(n)},e))}}}]);