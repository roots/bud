"use strict";(self.webpackChunk_roots_bud_docs=self.webpackChunk_roots_bud_docs||[]).push([[39048],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=i,y=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(y,o(o({ref:t},c),{},{components:n})):r.createElement(y,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1413:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],s={id:"bud.entry",title:"bud.entry",description:"Specify a set of assets to include in the compilation.",sidebar_label:"bud.entry",image:"https://budjs.netlify.app/img/share/docs/bud.entry.png"},p=void 0,l={unversionedId:"bud.entry",id:"bud.entry",title:"bud.entry",description:"Specify a set of assets to include in the compilation.",source:"@site/docs/07-bud.entry.mdx",sourceDirName:".",slug:"/bud.entry",permalink:"/docs/bud.entry",editUrl:"https://github.com/roots/bud/edit/next/site/docs/docs/07-bud.entry.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{id:"bud.entry",title:"bud.entry",description:"Specify a set of assets to include in the compilation.",sidebar_label:"bud.entry",image:"https://budjs.netlify.app/img/share/docs/bud.entry.png"},sidebar:"sidebar",previous:{title:"bud.devtool",permalink:"/docs/bud.devtool"},next:{title:"bud.env",permalink:"/docs/bud.env"}},c=[{value:"Usage",id:"usage",children:[],level:2},{value:"Specifying dependencies",id:"specifying-dependencies",children:[],level:2},{value:"Globbing",id:"globbing",children:[],level:2},{value:"Specifying entrypoints with hooks",id:"specifying-entrypoints-with-hooks",children:[],level:2},{value:"Signature",id:"signature",children:[],level:2}],u={toc:c};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Specify a set of assets to include in the compilation."),(0,a.kt)("p",null,"If no entrypoint is provided ",(0,a.kt)("strong",{parentName:"p"},"bud")," will attempt to compile ",(0,a.kt)("strong",{parentName:"p"},"src/index.js")," to ",(0,a.kt)("strong",{parentName:"p"},"dist/main.js"),"."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"The simplest usage is just a name for the entrypoint and the asset to compile"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='bud.config.js'",title:"'bud.config.js'"},"bud.entry('app', 'app.js')\n")),(0,a.kt)("p",null,"It is also possible to pass an array of assets. Assets do not have to be the same filetype to be grouped together as a single entrypoint."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='bud.config.js'",title:"'bud.config.js'"},"bud.entry('app', ['app.js', 'app.css'])\n")),(0,a.kt)("p",null,"You may specify multiple entrypoints in one call using object syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='bud.config.js'",title:"'bud.config.js'"},"bud.entry({\n  app: ['app.js', 'app.css'],\n  admin: ['admin.js', 'admin.css'],\n})\n")),(0,a.kt)("h2",{id:"specifying-dependencies"},"Specifying dependencies"),(0,a.kt)("p",null,"Bud supports the new Webpack 5 ",(0,a.kt)("inlineCode",{parentName:"p"},"dependOn")," syntax for explicitly defining entrypoint dependencies."),(0,a.kt)("p",null,"Example react application:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='bud.config.js'",title:"'bud.config.js'"},"bud.entry({\n  react: ['react', 'react-dom'],\n  app: {\n    import: ['app.js', 'app.css'],\n    dependOn: ['react'],\n  },\n})\n")),(0,a.kt)("h2",{id:"globbing"},"Globbing"),(0,a.kt)("p",null,"You can specify assets using ",(0,a.kt)("a",{parentName:"p",href:"https://git.io/JkGbw"},"fast-glob syntax"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"*")," matches any number of characters, but not ",(0,a.kt)("inlineCode",{parentName:"li"},"/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"?")," matches a single character, but not ",(0,a.kt)("inlineCode",{parentName:"li"},"/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"**")," matches any number of characters, including ",(0,a.kt)("inlineCode",{parentName:"li"},"/"),", as long as it's the only thing in a path part"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"{}"),' allows for a comma-separated list of "or" expressions'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"!")," at the beginning of a pattern will negate the match")),(0,a.kt)("h2",{id:"specifying-entrypoints-with-hooks"},"Specifying entrypoints with hooks"),(0,a.kt)("p",null,"You may also specify entrypoints using the ",(0,a.kt)("inlineCode",{parentName:"p"},"build/entry")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/bud.hooks/"},"hook"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='bud.config.js'",title:"'bud.config.js'"},"bud.hooks.on('build/entry', {\n  app: ['app.js', 'app.css'],\n  admin: ['admin.js', 'admin.css'],\n})\n")),(0,a.kt)("p",null,"This will completely override whatever is defined. If you want to augment the existing definition you can do so with spread syntax."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='bud.config.js'",title:"'bud.config.js'"},"bud.hooks.on('build/entry', entrypoints => ({\n  ...entrypoints,\n  app: ['app.js', 'app.css'],\n  admin: ['admin.js', 'admin.css'],\n})\n")),(0,a.kt)("h2",{id:"signature"},"Signature"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='@roots/bud-api/types/repository/index.d.ts'",title:"'@roots/bud-api/types/repository/index.d.ts'"},"namespace Repository {\n  interface Entry {\n    (\n      this: Framework,\n      name: string,\n      entrypoint: Entry.Value,\n    ): Framework\n  }\n\n  interface Entry {\n    (this: Framework, entrypoints: Entry.Input): Framework\n  }\n\n  namespace Entry {\n    interface Object {\n      import?: string[]\n      dependsOn?: string[]\n    }\n\n    interface Input {\n      [k: string]:\n        | Object\n        | Object['import']\n        | GlobTask['pattern']\n    }\n\n    type Value = GlobTask['pattern'] | Array<GlobTask['pattern']>\n  }\n}\n")))}d.isMDXComponent=!0}}]);