"use strict";(self.webpackChunk_roots_bud_docs=self.webpackChunk_roots_bud_docs||[]).push([[5616],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return b}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(t),b=o,m=d["".concat(u,".").concat(b)]||d[b]||c[b]||a;return t?r.createElement(m,s(s({ref:n},p),{},{components:t})):r.createElement(m,s({ref:n},p))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=d;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},12375:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var r=t(87462),o=t(63366),a=(t(67294),t(3905)),s=["components"],i={slug:"bud.use",title:"bud.use",description:"Register an extension or set of extensions",sidebar_label:"bud.use",image:"https://budjs.netlify.app/img/share/docs/bud.use.png"},u=void 0,l={unversionedId:"bud.use",id:"bud.use",title:"bud.use",description:"Register an extension or set of extensions",source:"@site/docs/26-bud.use.mdx",sourceDirName:".",slug:"/bud.use",permalink:"/docs/bud.use",editUrl:"https://github.com/roots/bud/edit/next/site/docs/docs/26-bud.use.mdx",tags:[],version:"current",sidebarPosition:26,frontMatter:{slug:"bud.use",title:"bud.use",description:"Register an extension or set of extensions",sidebar_label:"bud.use",image:"https://budjs.netlify.app/img/share/docs/bud.use.png"},sidebar:"sidebar",previous:{title:"bud.template",permalink:"/docs/bud.template"},next:{title:"bud.when",permalink:"/docs/bud.when"}},p=[{value:"Usage",id:"usage",children:[],level:2},{value:"Signature",id:"signature",children:[],level:2}],c={toc:p};function d(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Register an extension or set of extensions."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"bud.use")," is an asyncronous function that takes a single argument, ",(0,a.kt)("inlineCode",{parentName:"p"},"extensions"),". It returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise")," that resolves to the ",(0,a.kt)("inlineCode",{parentName:"p"},"bud")," instance.\nYou can register multiple extensions at once by passing an array of extensions."),(0,a.kt)("p",null,"It is not necessary to call ",(0,a.kt)("inlineCode",{parentName:"p"},"bud.use")," to use an extension. The extensions will be discovered automatically before the configuration file is even loaded."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Add packaged bud extensions:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"await bud.use([\n  require('@roots/bud-babel'),\n  require('@roots/bud-react'),\n])\n")),(0,a.kt)("p",null,"Add an extension inline (also works with an array of extensions):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"await bud.use({\n  name: 'my-webpack-plugin',\n  make: () => new MyWebpackPlugin(),\n})\n")),(0,a.kt)("p",null,"Add a webpack plugin inline (also work with an array of plugins):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"await bud.use(new MyWebpackPlugin())\n")),(0,a.kt)("h2",{id:"signature"},"Signature"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='@roots/bud-api/types/repository/index.d.ts'",title:"'@roots/bud-api/types/repository/index.d.ts'"},"namespace Repository {\n  interface Use {\n    (this: Framework, source: Use.Input): Promise<Framework>\n  }\n\n  namespace Use {\n    type Input = Module | Module[]\n  }\n}\n")))}d.isMDXComponent=!0}}]);