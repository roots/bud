<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>bud.js Blog</title>
        <link>https://budjs.netlify.app/releases</link>
        <description>bud.js Blog</description>
        <lastBuildDate>Thu, 01 Jan 1970 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[Release: 5.0.0]]></title>
            <link>https://budjs.netlify.app/releases/5.0.0</link>
            <guid>5.0.0</guid>
            <pubDate>Thu, 01 Jan 1970 00:00:00 GMT</pubDate>
            <description><![CDATA[Release notes for 5.0.0]]></description>
            <content:encoded><![CDATA[<p>Bud v5 comes with a lot of changes. Please <a href="https://github.com/roots/bud/compare/v4.6.0...v5.0.0%22">review the diff to see what&#x27;s changed</a></p><p><strong> The most important change</strong></p><p>You no longer need to explicitly require an extension in your
configuration file or call <code>bud.use</code> to load it. Bud will
automatically load the extensions you have installed. This
feature can be circumvented with the <strong>--no-inject</strong> flag but
this is not as well tested as the default behavior.</p><h2>Breaking</h2><ul><li><code>@roots/bud-cli</code> has been deprecated. CLI functionality is packaged with <code>@roots/bud</code>.</li><li><code>bud.use</code> method is now asynchronous.</li><li><code>bud.build.make</code> method is now asynchronous.</li><li>Hook key <code>build</code> now refers to an asynchronous filter.</li><li>Hook key <code>build.plugins</code> now refers to an asynchronous filter.</li><li><code>bud.extensions.enqueue</code> can be used to enqueue a plugin and returns Bud instance for chaining.</li><li><code>@roots/bud</code> no longer exports <code>Framework</code>. Use <code>Bud</code> or import <code>Framework</code> from <code>@roots/bud-framework</code> instead.</li></ul><h2>Added</h2><ul><li><p>Yaml, json5 and TypeScript config file support.</p></li><li><p>Multi-compiler support:</p><ul><li><code>bud.make</code> will create a new Bud instance for you to configure.</li><li><code>bud.get</code> will retrieve a previously made child instance for further configuration.</li><li><code>bud.set</code> allows setting a Bud instance as a <code>bud.children</code> entry.</li><li><code>bud.root</code> always returns the parent compiler. If called from the parent it will return itself.</li><li><code>bud.isRoot</code> will be true in the parent context.</li><li><code>bud.hasChildren</code> will be true in the parent context if there are child Bud instances.</li></ul></li><li><p>Several new hooks:</p><ul><li><code>event.build.make.before</code> is called just before the webpack config is created (async).</li><li><code>event.build.make.after</code> is called just after the webpack config is created (async).</li><li><code>event.compiler.before</code> is called just before the final config is passed to webpack.</li><li><code>event.compiler.after</code> is called just after the final config is passed to webpack.</li></ul></li><li><p>New CLI commands:</p><ul><li><strong>bud clean</strong> - removes dist and cache files</li><li><strong>bud doctor</strong> - check for missing peer dependencies and configuration errors</li><li><strong>bud install</strong> - automatically install/update required dependencies</li><li><strong>bud serve</strong> - start the development server and initiate hot module reloading</li></ul></li><li><p>New <code>bud build</code> flags:</p><ul><li><strong>--target</strong> Target a specific Bud instance to be built in isolation. Can be passed multiple times to target more than one compiler.</li><li><strong>--<!-- -->[no]<!-- -->-cache</strong> Toggle filesystem caching. <!-- -->[default: <code>true</code>]</li><li><strong>--cache.type</strong> Set the cache type. Can be <code>filesystem</code> or <code>memory</code>. <!-- -->[default: <code>filesystem</code>]</li><li><strong>--location.<!-- -->[src|dist|project|storage]</strong> Set a project disk location</li><li><strong>--<!-- -->[no]<!-- -->-log</strong> - Toggle logging <!-- -->[default: <code>true</code>]</li><li><strong>--<!-- -->[no]<!-- -->-log.level</strong> - Set logging level (<code>v</code>, <code>vv</code>, <code>vvv</code>, <code>vvvv</code>) <!-- -->[default: <code>vvv</code>]</li><li><strong>--<!-- -->[no]<!-- -->-log.papertrail</strong> - Allow logger lines to overwrite the previous line from the same scope <!-- -->[default: <code>--no-log.papertrail</code>]</li><li><strong>--log-secret</strong> - Suppress a string from logger output (can use multiple times) <!-- -->[default: <code>--log-secret {cwd}</code>]</li><li><strong>--<!-- -->[no]<!-- -->-dashboard</strong> - Toggle the bud dashboard <!-- -->[default: <code>--dashboard</code>]</li><li>...many more! add <strong>--help</strong> after any command to see what options are available.</li></ul></li><li><p><a href="https://github.com/roots/bud/tree/main/examples/webpack-plugin">example project</a> demonstrating how to use off-the-shelf webpack plugins with <code>bud.use</code></p></li></ul><h2>Improved</h2><ul><li>Greatly improved performance. The entire Bud lifecycle is asynchronous.</li><li>Extensions that follow the <code>bud-*</code> naming convention are now automatically registered and booted.</li><li>Peer dependency requirements are now checked. Missing dependencies will not throw an error but will be logged.</li><li><strong>bud.use</strong> now supports using Webpack plugins directly.</li><li>Informative logging.</li><li>The CLI and dashboard have a fresh coat of paint.</li><li>New notification center integration (MacOS only)</li></ul><h2>Internal</h2><ul><li><code>@roots/bud-typings</code> has been deprecated.</li><li>Added <a href="https://github.com/roots/bud/tree/main/.yarn/local"><code>@roots/yarn-plugin-repo</code></a> to provide utilities in the <code>yarn repo</code> namespace.</li></ul><h2>Contributors</h2><p>Thanks <a href="/contributors">to all the contributors</a>!</p>]]></content:encoded>
        </item>
    </channel>
</rss>