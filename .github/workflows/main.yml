name: Build & Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - next
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        platform:
          - ubuntu-latest
        node:
          - 16.x

    name: test node@${{matrix.node}}/${{matrix.platform}}
    runs-on: ${{matrix.platform}}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node}}

      - name: Cache
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Restore
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Start
        run: 'docker compose up -d'

      - name: Setup
        run: 'yarn @bud $ sh /bud/dev/docker/setup.sh'

      - name: Lint packages
        run: 'yarn @bud : lint --skypack'

      - name: Proxy publish packages
        run: 'yarn @bud : release proxy --tag latest'

      - name: 'babel integration: yarn install'
        run: 'yarn @bud : example install babel --with yarn'

      - name: 'babel integration: yarn build'
        run: 'yarn @bud : example build babel --with yarn'

      - name: 'babel integration: npm install'
        run: 'yarn @bud : example install babel --with npm'

      - name: 'babel integration: npm build'
        run: 'yarn @bud : example build babel --with npm'

      - name: Test
        run: 'yarn @bud : test --coverage --verbose --maxWorkers=50%'
