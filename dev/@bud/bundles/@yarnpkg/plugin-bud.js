/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-bud",
factory: function (require) {
var plugin=(()=>{var J=Object.create,_=Object.defineProperty;var Q=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var Z=Object.getPrototypeOf,D=Object.prototype.hasOwnProperty;var aa=t=>_(t,"__esModule",{value:!0});var i=t=>{if(typeof require!="undefined")return require(t);throw new Error('Dynamic require of "'+t+'" is not supported')};var ta=(t,s)=>{for(var e in s)_(t,e,{get:s[e],enumerable:!0})},sa=(t,s,e)=>{if(s&&typeof s=="object"||typeof s=="function")for(let n of V(s))!D.call(t,n)&&n!=="default"&&_(t,n,{get:()=>s[n],enumerable:!(e=Q(s,n))||e.enumerable});return t},o=t=>sa(aa(_(t!=null?J(Z(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var oa={};ta(oa,{default:()=>ia});var q=o(i("@yarnpkg/cli")),r=o(i("@yarnpkg/core")),G=o(i("@yarnpkg/shell")),a=class extends q.BaseCommand{async getManifest(){return await r.Manifest.tryFind(this.context.cwd)}async getConfiguration(){return await r.Configuration.find(this.context.cwd,this.context.plugins)}async getProject(){let s=await this.getConfiguration(),{project:e}=await r.Project.find(s,this.context.cwd);return e}async getWorkspace(){let s=await this.getConfiguration(),{workspace:e}=await r.Project.find(s,this.context.cwd);return e}withPassthrough(s){return this.passthrough.length?this.passthrough.reduce((e,n)=>n?`${e} ${n}`:`${e}`,s):s}async $(...s){let e=await this.getProject();await Promise.all(s.map(async n=>{if(!!n){console.log(`@bud | ${n}
`);try{let I=await(0,G.execute)(n,[],{cwd:e.cwd});if(I!==0)throw new Error(`@bud | ${n} failed with code ${I}
`)}catch(I){throw new Error(I)}}}))}};var M=class extends a{async execute(){this.context.stdout.write(M.usage.details)}},m=M;m.paths=[["@bud"]],m.usage={category:"@bud",description:"run developer commands",details:`Use this command to assist with developer tasks and debugging across the repository.

If you are just trying to build \`bud.js\` run \`yarn @bud make\`.

If you are doing development work in the repository you can run \`yarn @bud build -w\` to watch for changes and rebuild automatically.

There are additional commands to assist with:

\u{1F40B} using docker

- \`yarn @bud down --help\`
- \`yarn @bud up --help\`
- \`yarn @bud $ --help\`

\u{1F9FC} cleaning build artifacts

- \`yarn @bud clean --help\`

\u{1F9F1} compiling packages to single file, zero dependency executables

- \`yarn @bud compile --help\`

\u{1F4D9} documenting code

- \`yarn @bud docs --help\`

\u{1F928} linting code

- \`yarn @bud lint --help\`

\u{1F6E0}  building all packages as in CI

- \`yarn @bud make --help\`

\u{1F4E6}  proxying packages in a local dev environment

- \`yarn @bud proxy --help\`

\u{1F69A}  ship it

- \`yarn @bud release --help\`
`};var c=o(i("clipanion"));var d=class extends a{constructor(){super(...arguments);this.cjs=c.Option.Boolean("-c,--cjs",!1,{description:"build commonjs. default true."});this.esm=c.Option.Boolean("-e,--esm",!1,{description:"build esmodules. default true."});this.clean=c.Option.Boolean("--clean",!1,{description:"build with tsc --clean flag. default false"});this.force=c.Option.Boolean("--force",!1,{description:"build with tsc --force flag. default false."});this.verbose=c.Option.Boolean("--verbose",!0,{description:"build with tsc --verbose flag. default true."});this.watch=c.Option.Boolean("--watch",!1,{description:"build with tsc --watch flag. default false."})}async execute(){let s=!this.cjs&&!this.esm;this.clean&&(this.verbose=!1,this.force=!1);let e={cjs:`yarn tsc -b config/tsconfig.json${this.verbose?" --verbose":""}${this.clean?" --clean":""}${this.force?" --force":""}${this.watch?" --watch":""}`,esm:`yarn tsc -b config/tsconfig.esm.json${this.verbose?" --verbose":""}${this.clean?" --clean":""}${this.force?" --force":""}${this.watch?" --watch":""}`};s?await this.$(e.cjs,e.esm):this.cjs?await this.$(e.cjs):this.esm&&await this.$(e.esm),await this.$("yarn @bud compile @roots/container","yarn @bud compile @roots/bud-dashboard","yarn @bud compile @roots/bud-support","yarn @bud compile @roots/wordpress-dependencies-webpack-plugin","yarn @bud compile @roots/wordpress-externals-webpack-plugin","yarn @bud compile @roots/entrypoints-webpack-plugin")}};d.paths=[["@bud","build"]],d.usage={category:"@bud",description:"build project packages",examples:[["build packages as commonjs","yarn @bud build --cjs"],["build packages as esm","yarn @bud build --esm"],["build packages with tsc --clean flag","yarn @bud build --clean"],["build packages with tsc --force flag","yarn @bud build --force"],["build packages with tsc --verbose flag","yarn @bud build --verbose"],["build packages with tsc --watch flag","yarn @bud build --watch"],["force build commonjs verbosely","yarn @bud build --cjs --verbose --force"]]};var u=class extends a{async execute(){await this.$("yarn cache clean --all"),await this.$("git clean -fxd")}};u.paths=[["@bud","clean"]],u.usage={category:"@bud",description:"clean project artifacts",examples:[["delete all untracked files","yarn @bud clean --dfx"]]};var H=o(i("clipanion"));var b=class extends a{constructor(){super(...arguments);this.package=H.Option.String()}async execute(){await this.$(`yarn ts-node --project ./config/tsconfig.json ./dev/tasks/compile/cjs ${this.package}`),await this.$(`yarn ts-node --project ./config/tsconfig.json ./dev/tasks/compile/esm ${this.package}`)}};b.paths=[["@bud","compile"]],b.usage={category:"@bud",description:"compile a package",details:"compiles as both cjs and esm with ncc",examples:[["compile {package name}","yarn @bud compile @roots/bud-support"]]};var U=o(i("clipanion"));var h=class extends a{constructor(){super(...arguments);this.passthrough=U.Option.Proxy({name:"@bud options"})}async execute(){await this.$(this.withPassthrough("docker compose run bud yarn @bud"))}};h.paths=[["@bud",":"]],h.usage={category:"@bud",description:"run a @bud command inside the container.",details:"equivalent to `docker compose run bud yarn @bud [...]`",examples:[["run `yarn @bud make` within the container","yarn @bud : make"]]};var W=o(i("clipanion"));var y=class extends a{constructor(){super(...arguments);this.passthrough=W.Option.Proxy({name:"docker compose down options"})}async execute(){await this.$(this.withPassthrough("docker compose down"))}};y.paths=[["@bud","down"]],y.usage={category:"@bud",description:"stop the container",details:"equivalent to `docker compose down [...]`",examples:[["stop the container","yarn @bud down"]]};var g=class extends a{async execute(){await this.$(this.withPassthrough("docker compose run bud"))}};g.paths=[["@bud","$"]],g.usage={category:"@bud",description:"run a command in the container",details:"equivalent to `docker compose run bud [...]`",examples:[["run bash command in docker container",'yarn @bud $ echo "hello world"']]};var f=class extends a{async execute(){await this.$("docker compose run bud bash")}};f.paths=[["@bud","bash"]],f.usage={category:"@bud",description:"open a bash shell",details:"equivalent to `docker compose run bud bash`",examples:[["open a bash shell","yarn @bud bash"]]};var X=o(i("clipanion"));var x=class extends a{constructor(){super(...arguments);this.passthrough=X.Option.Proxy({name:"docker compose up options"})}async execute(){await this.$(this.withPassthrough("docker compose up"))}};x.paths=[["@bud","up"]],x.usage={category:"@bud",description:"start the container",details:"equivalent to `docker compose up [...]`",examples:[["start the container","yarn @bud up"],["start the container detached","yarn @bud up -d"]]};var N=o(i("clipanion"));var w=class extends a{constructor(){super(...arguments);this.api=N.Option.Boolean("-a,--api",!1,{description:"build api docs"});this.site=N.Option.Boolean("-s,--site",!1,{description:"build site files"});this.readme=N.Option.Boolean("-r,--readme",!1,{description:"build readme files"})}async execute(){if(!this.site&&!this.readme&&!this.api){await this.$("yarn node ./site/api-documenter.build.js","yarn ts-node ./dev/site/cli-examples"),await this.$("yarn workspace @roots/bud-docs run docusaurus build","yarn ts-node-transpile-only --project ./config/tsconfig.json ./dev/readme");return}(this.api||this.site)&&await this.$("yarn node ./site/api-documenter.build.js"),this.site&&(await this.$("yarn ts-node ./dev/site/cli-examples"),await this.$("yarn workspace @roots/bud-docs run docusaurus build")),this.readme&&await this.$("yarn ts-node-transpile-only --project ./config/tsconfig.json ./dev/readme")}};w.paths=[["@bud","docs"]],w.usage={category:"@bud",description:"build docs and readme files. no flags builds everything. running with the --site flag will also build api docs.",examples:[["build all","yarn @bud docs"],["build api documentation","yarn @bud docs --api"],["build api documentation and site files","yarn @bud docs --site"],["build readme files","yarn docs --readme"]]};var p=o(i("clipanion"));var C=class extends a{constructor(){super(...arguments);this.prettier=p.Option.Boolean("-p,--prettier",!1,{description:"run prettier"});this.eslint=p.Option.Boolean("-e,--eslint",!1,{description:"run eslint"});this.skypack=p.Option.Boolean("-s,--skypack",!1,{description:"run skypack"});this.types=p.Option.Boolean("-t,--types",!1,{description:"includes types (prettier)"});this.lib=p.Option.Boolean("-l,--lib",!1,{description:"includes lib (prettier)"})}async execute(){!this.prettier&&!this.skypack&&!this.eslint&&(this.prettier=!0,this.skypack=!0,this.eslint=!0),await this.$(...[...this.eslint?["yarn eslint ./packages/@roots/*/src/**/*.{js,jsx,ts,tsx} --fix","yarn eslint ./dev/**/*.{js,jsx,ts,tsx} --fix","yarn eslint ./site/src/**/*.{js,jsx,ts,tsx} --fix"]:[],...this.prettier?["yarn prettier ./packages/@roots/*/src/**/* --write --ignore-unknown --loglevel silent --no-error-on-unmatched-pattern",this.lib?"yarn prettier ./packages/@roots/*/lib/**/* --write --ignore-unknown --loglevel silent --no-error-on-unmatched-pattern":"",this.types?"yarn prettier ./packages/@roots/*/types/**/*.d.ts --write --ignore-unknown --loglevel silent --no-error-on-unmatched-pattern":null].filter(Boolean):[],this.skypack?"yarn workspaces foreach --no-private --exclude @roots/bud-typings -p -v run pkg":null].filter(Boolean))}};C.paths=[["@bud","lint"]],C.usage={category:"@bud",description:"lint repo files. run all linters by passing no flags.",examples:[["run all linters","yarn @bud lint"],["run prettier","yarn @bud lint --prettier"],["run eslint","yarn @bud lint --eslint"],["run skypack","yarn @bud lint --skypack"],["lint on type definitions as well","yarn @bud lint --types"]]};var k=class extends a{async execute(){await this.$("yarn install --immutable"),await this.$("yarn @bud build"),await this.$("yarn @bud lint","yarn @bud test --coverage --verbose --maxWorkers=50%"),await this.$("yarn @bud docs")}};k.paths=[["@bud","make"]],k.usage={category:"@bud",description:"make project files same as ci",examples:[["install/build repo packages","yarn @bud make"]]};var z=o(i("clipanion"));var l="https://registry.npmjs.org/",Y="http://localhost:4873";var v=class extends a{constructor(){super(...arguments);this.reset=z.Option.Boolean("-r,--reset",!1,{description:"reset proxy config"})}async execute(){await this.$("yarn config set 'npmAuthToken' ''"),await this.$(`yarn config set npmRegistryServer ${this.reset?l:Y}`),await this.$(`yarn config set npmPublishRegistry ${this.reset?l:Y}`),await this.$(`yarn config set unsafeHttpWhitelist --json '[${this.reset?'""':'"localhost"'}]'`)}};v.paths=[["@bud","proxy","config"]],v.usage={category:"@bud",description:"configure yarn to work with verdaccio",examples:[["configure yarn","yarn @bud proxy config"],["config yarn to npm defaults","yarn @bud proxy config --reset"]]};var $=class extends a{async execute(){await this.$("yarn pm2 delete verdaccio")}};$.paths=[["@bud","proxy","delete"]],$.usage={category:"@bud",description:"delete verdaccio server",examples:[["delete verdaccio server","yarn @bud proxy delete"]]};var j=class extends a{async execute(){await this.$("yarn cache clean --all"),await this.$("yarn @bud proxy config"),await this.$("yarn @bud proxy start"),await this.$("yarn install --immutable")}};j.paths=[["@bud","proxy","make"]],j.usage={category:"@bud",description:"make proxy server",examples:[["make verdaccio server","yarn @bud proxy make"]]};var K=o(i("clipanion"));var O=class extends a{constructor(){super(...arguments);this.version=K.Option.String("-v,--version",null,{description:"version"})}async execute(){if(!this.version){let{version:s}=await this.getManifest();this.version=s}await this.$("yarn @bud proxy config"),await this.$(`yarn workspaces foreach --no-private exec npm version ${this.version}`),await this.$("yarn @bud build"),await this.$("yarn workspaces foreach --no-private npm publish --access public --tag dev"),await this.$("yarn @bud proxy config --reset")}};O.paths=[["@bud","proxy","publish"]],O.usage={category:"@bud",description:"publish packages to proxy repo",examples:[["publish packages to verdaccio","yarn @bud proxy publish"]]};var S=class extends a{async execute(){await this.$("yarn @bud proxy delete"),await this.$("yarn @bud proxy make")}};S.paths=[["@bud","proxy","remake"]],S.usage={category:"@bud",description:"remake proxy server",examples:[["run verdaccio server","yarn @bud proxy remake"]]};var P=class extends a{async execute(){await this.$("yarn pm2 restart verdaccio")}};P.paths=[["@bud","proxy","restart"]],P.usage={category:"@bud",description:"restart proxy repo",examples:[["run verdaccio server","yarn @bud proxy restart"]]};var T=class extends a{async execute(){await this.$("yarn pm2 start ./config/pm2.config.js")}};T.paths=[["@bud","proxy","start"]],T.usage={category:"@bud",description:"start proxy server",examples:[["run verdaccio server","yarn @bud proxy start"]]};var E=class extends a{async execute(){await this.$("yarn pm2 stop verdaccio")}};E.paths=[["@bud","proxy","stop"]],E.usage={category:"@bud",description:"stop proxy server",examples:[["run verdaccio server","yarn @bud proxy stop"]]};var A=o(i("clipanion"));var B=class extends a{constructor(){super(...arguments);this.token=A.Option.String("-t,--token",process.env.NPM_AUTH_TOKEN,{description:"token"});this.version=A.Option.String("-v,--version",null,{description:"version"});this.tag=A.Option.String("-t,--tag","dev",{description:"tag"})}async execute(){await this.executeStep("preflight"),await this.executeStep("bump"),await this.executeStep("make"),await this.executeStep("push"),await this.executeStep("prepublish"),await this.executeStep("publish")}async executeStep(s){try{if(!this[s])throw new Error(`${s} is not implemented`);await this[`${s}`]()}catch(e){process.stderr.write(`${s} failed: ${e.message}
`),process.stderr.write(`${e.stack}

`),process.stderr.write(`Resettting yarnrc state
`),await this.$("yarn config set 'npmAuthToken' ''"),process.exit(1)}}async preflight(){if(!this.version){let{version:s}=await this.getManifest();this.version=s}if(!this.token)throw new Error("--token flag or NPM_AUTH_TOKEN env variable is required");if(this.tag!=="latest"&&this.tag!=="next")throw new Error("--tag must be 'latest' or 'next'")}async bump(){await this.$("yarn @bud clean"),await this.$(`git checkout -b v${this.version}`),await this.$("yarn install --immutable"),await this.$(`yarn workspaces foreach --no-private exec npm version ${this.version}`)}async make(){await this.$("yarn @bud clean"),await this.$("yarn @bud make")}async push(){await this.$(`git commit -am 'chore: Bump @roots/bud to v${this.version}`),await this.$(`git tag v${this.version}`),await this.$("git push --tags"),this.isTaggedLatest()&&await this.$(`git push -u origin v${this.version}`)}async prepublish(){await this.$(`yarn config set npmRegistryServer ${l}`),await this.$(`yarn config set npmPublishRegistry ${l}`),await this.$("yarn config set unsafeHttpWhitelist --json '[]'"),await this.$(`yarn config set 'npmAuthToken' "${this.token}"`)}async publish(){await this.$(`yarn workspaces foreach --no-private npm publish --access public --tag ${this.tag}`)}isTaggedLatest(){return this.tag==="latest"}};B.paths=[["@bud","release"]],B.usage={category:"@bud",description:"do a release. if no token is passed, the env NPM_AUTH_TOKEN will be used.",examples:[["yarn @bud release --version x.y.z --tag latest --token <token>","Bump packages to x.y.z and publish to npm."]]};var F=o(i("clipanion"));var R=class extends a{constructor(){super(...arguments);this.passthrough=F.Option.Proxy({name:"jest options"})}async execute(){await this.$(this.withPassthrough("yarn jest --config config/jest.config.js"))}};R.paths=[["@bud","test"]],R.usage={category:"@bud",details:"test files with jest",examples:[["test","yarn @bud test"],["update snapshots","yarn @bud test --updateSnapshot"]]};var L={Bud:m,Build:d,Clean:u,Compile:b,ContainerBud:h,ContainerDown:y,ContainerRun:g,ContainerBash:f,ContainerUp:x,Docs:w,Lint:C,Make:k,ProxyConfig:v,ProxyDelete:$,ProxyMake:j,ProxyPublish:O,ProxyRemake:S,ProxyRestart:P,ProxyStart:T,ProxyStop:E,Test:R,Release:B};var ea={hooks:{afterAllInstalled:()=>{process.stdout.write(`
What a great install, am I right?
`)}},commands:Object.values(L)},ia=ea;return oa;})();
return plugin;
}
};
