// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sass .budfiles/bud.webpack.config.js 1`] = `
Object {
  "bail": true,
  "cache": Object {
    "type": "memory",
  },
  "context": StringContaining "examples/sass",
  "entry": Object {
    "app": Object {
      "import": Array [
        "app.scss",
      ],
    },
  },
  "infrastructureLogging": Object {
    "appendOnly": true,
    "level": "none",
    "stream": Object {
      "_eventsCount": 1,
      "_isStdio": true,
      "_readableState": Object {
        "autoDestroy": true,
        "constructed": true,
        "defaultEncoding": "utf8",
        "highWaterMark": 16384,
        "sync": true,
      },
      "_type": "pipe",
      "_writableState": Object {
        "allBuffers": true,
        "allNoop": true,
        "autoDestroy": true,
        "constructed": true,
        "defaultEncoding": "utf8",
        "highWaterMark": 16384,
        "sync": true,
      },
      "fd": 2,
    },
  },
  "mode": "production",
  "module": Object {
    "rules": Array [
      Object {
        "test": Object {},
      },
      Object {
        "oneOf": Array [
          Object {
            "exclude": Object {},
            "generator": Object {
              "filename": "assets/[hash][ext][query]",
            },
            "test": Object {},
            "type": "asset/resource",
          },
          Object {
            "exclude": Object {},
            "test": Object {},
            "use": Array [
              Object {
                "loader": StringContaining "resolve-url-loader/index.js",
                "options": Object {
                  "root": StringContaining "examples/sass/src",
                },
              },
            ],
          },
          Object {
            "exclude": Object {},
            "generator": Object {
              "filename": "assets/[hash][ext][query]",
            },
            "test": Object {},
            "type": "asset/resource",
          },
          Object {
            "test": Object {},
            "use": Array [
              Object {
                "loader": StringContaining "html-loader/dist/cjs.js",
              },
            ],
          },
          Object {
            "test": Object {},
            "use": Array [
              Object {
                "loader": StringContaining "csv-loader/index.js",
              },
            ],
          },
          Object {
            "test": Object {},
            "use": Array [
              Object {
                "loader": StringContaining "xml-loader/index.js",
              },
            ],
          },
          Object {
            "test": Object {},
            "type": "json",
          },
          Object {
            "test": Object {},
            "type": "json",
          },
          Object {
            "test": Object {},
            "type": "json",
          },
          Object {
            "exclude": Object {},
            "test": Object {},
            "use": Array [
              Object {
                "loader": StringContaining "mini-css-extract-plugin/dist/loader.js",
              },
              Object {
                "loader": StringContaining "css-loader/dist/cjs.js",
                "options": Object {
                  "importLoaders": 1,
                },
              },
            ],
          },
          Object {
            "exclude": Object {},
            "test": Object {},
          },
          Object {
            "exclude": Object {},
            "test": Object {},
            "use": Array [
              Object {
                "loader": StringContaining "mini-css-extract-plugin/dist/loader.js",
              },
              Object {
                "loader": StringContaining "css-loader/dist/cjs.js",
                "options": Object {
                  "importLoaders": 1,
                },
              },
              Object {
                "loader": StringContaining "sass-loader/dist/cjs.js",
                "options": Object {
                  "implementation": Object {
                    "TRUE": Object {
                      "value": true,
                    },
                    "info": StringContaining "dart-sass",
                  },
                  "sourceMap": true,
                },
              },
            ],
          },
        ],
      },
    ],
  },
  "name": "bud",
  "optimization": Object {
    "minimize": true,
    "minimizer": Array [
      "...",
      Object {
        "options": Object {
          "minimizerOptions": Object {
            "preset": Array [
              "default",
              Object {
                "discardComments": Object {
                  "removeAll": true,
                },
              },
            ],
          },
          "parallel": true,
          "test": Object {},
        },
      },
      Object {
        "options": Object {
          "minimizerOptions": "<<Circular reference to 'config.optimization.minimizer.[1].options.minimizerOptions'>>",
          "parallel": true,
          "test": Object {},
        },
      },
    ],
    "moduleIds": "deterministic",
    "splitChunks": Object {
      "cacheGroups": Object {
        "vendor": Object {
          "chunks": "all",
          "filename": "vendor/[name].js",
          "priority": -10,
          "reuseExistingChunk": true,
          "test": Object {},
        },
      },
      "defaultSizeTypes": Array [
        "...",
      ],
    },
  },
  "output": Object {
    "enabledChunkLoadingTypes": Array [
      "...",
    ],
    "enabledLibraryTypes": Array [
      "...",
    ],
    "enabledWasmLoadingTypes": Array [
      "...",
    ],
    "filename": "[name].js",
    "path": StringContaining "examples/sass/dist",
  },
  "plugins": Array [
    Object {
      "cleanOnceBeforeBuildPatterns": Array [
        "**/*",
        "!dll",
      ],
      "cleanStaleWebpackAssets": true,
      "outputPath": StringContaining "examples/sass/dist",
      "protectWebpackAssets": true,
    },
    Object {
      "depth": 8,
      "keepCircularReferences": true,
      "name": "bud.webpack.config.js",
      "outputPath": StringContaining "examples/sass/.budfiles",
    },
    Object {
      "ignorePatterns": Array [
        Object {},
      ],
    },
    Object {
      "options": Object {
        "fileName": "manifest.json",
        "removeKeyHash": Object {},
        "transformExtensions": Object {},
        "writeToFileEmit": true,
      },
    },
    Object {
      "options": Object {
        "chunkFilename": "[name].[id].css",
        "filename": "[name].css",
      },
      "runtimeOptions": Object {
        "linkType": "text/css",
      },
    },
  ],
  "recordsInputPath": StringContaining "examples/sass/.budfiles/bud-modules.json",
  "recordsOutputPath": StringContaining "examples/sass/.budfiles/bud-modules.json",
  "resolve": Object {
    "extensions": Array [
      ".wasm",
      ".mjs",
      ".js",
      ".jsx",
      ".css",
      ".json",
      ".json5",
      ".toml",
      ".xml",
      ".csv",
      ".tsv",
      ".yml",
      ".yaml",
      ".xml",
      ".scss",
    ],
    "modules": Array [
      "src",
      "node_modules",
      StringContaining "packages/@roots/bud",
      StringContaining "packages/@roots/bud-sass",
    ],
  },
}
`;

exports[`sass manifest.yml is unchanged 1`] = `
"extensions:
  - '@roots/bud-sass'

entry:
  app: app.scss
"
`;

exports[`sass package.json is unchanged 1`] = `
Object {
  "browserslist": Object {
    "development": Array [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version",
    ],
    "production": Array [
      ">0.5%",
      "not dead",
      "not op_mini all",
    ],
  },
  "devDependencies": Object {
    "@roots/bud": "workspace:*",
    "@roots/bud-sass": "workspace:*",
    "@types/sass": "^1",
    "sass": "1.38.1",
  },
  "name": "example-sass",
  "private": true,
}
`;

exports[`sass scss is transpiled 1`] = `"body,html{margin:0;padding:0}body{background:blue}body div{border:#fff}"`;

exports[`sass src/app.scss is unchanged 1`] = `
"$blue: blue;
$white: white;

html,
body {
  padding: 0;
  margin: 0;
}

body {
  background: $blue;

  div {
    border: $white;
  }
}
"
`;
