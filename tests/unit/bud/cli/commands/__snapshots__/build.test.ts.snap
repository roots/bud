// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Build Command has expected flags 1`] = `
Object {
  "cache": Object {
    "allowNo": true,
    "default": true,
    "description": "cache built modules to the filesystem",
    "parse": [Function],
    "type": "boolean",
  },
  "cache.type": Object {
    "default": "filesystem",
    "input": Array [],
    "multiple": false,
    "options": Array [
      "filesystem",
      "memory",
      "false",
    ],
    "parse": [Function],
    "type": "option",
  },
  "clean": Object {
    "allowNo": true,
    "default": true,
    "description": "clean dist directory before compiling",
    "parse": [Function],
    "type": "boolean",
  },
  "config": Object {
    "description": "path to config file",
    "input": Array [],
    "multiple": false,
    "parse": [Function],
    "type": "option",
  },
  "dashboard": Object {
    "allowNo": true,
    "default": true,
    "description": "enable bud dashboard",
    "parse": [Function],
    "type": "boolean",
  },
  "devtool": Object {
    "description": "specify source-map type",
    "input": Array [],
    "multiple": false,
    "parse": [Function],
    "type": "option",
  },
  "hash": Object {
    "allowNo": true,
    "description": "hash compiled filenames",
    "parse": [Function],
    "type": "boolean",
  },
  "help": Object {
    "allowNo": false,
    "char": "h",
    "description": "Show CLI help.",
    "parse": [Function],
    "type": "boolean",
  },
  "html": Object {
    "allowNo": true,
    "description": "generate an html template",
    "parse": [Function],
    "type": "boolean",
  },
  "inject": Object {
    "allowNo": true,
    "default": true,
    "description": "automatically register & boot extensions",
    "parse": [Function],
    "type": "boolean",
  },
  "install": Object {
    "allowNo": false,
    "default": false,
    "description": "ensure peer dependencies are installed",
    "parse": [Function],
    "type": "boolean",
  },
  "location.dist": Object {
    "description": "distribution directory",
    "input": Array [],
    "multiple": false,
    "parse": [Function],
    "type": "option",
  },
  "location.modules": Object {
    "description": "public path",
    "input": Array [],
    "multiple": false,
    "parse": [Function],
    "type": "option",
  },
  "location.project": Object {
    "description": "repo root path",
    "input": Array [],
    "multiple": false,
    "parse": [Function],
    "type": "option",
  },
  "location.publicPath": Object {
    "description": "public path",
    "input": Array [],
    "multiple": false,
    "parse": [Function],
    "type": "option",
  },
  "location.src": Object {
    "description": "source directory",
    "input": Array [],
    "multiple": false,
    "parse": [Function],
    "type": "option",
  },
  "location.storage": Object {
    "description": "storage directory",
    "input": Array [],
    "multiple": false,
    "parse": [Function],
    "type": "option",
  },
  "log": Object {
    "allowNo": true,
    "default": true,
    "description": "log to console",
    "parse": [Function],
    "type": "boolean",
  },
  "log.level": Object {
    "default": "vvv",
    "description": "set log verbosity. \`v\` is error level. \`vv\` is warning level. \`vvv\` is log level. \`vvvv\` is debug level.",
    "input": Array [],
    "multiple": false,
    "options": Array [
      "v",
      "vv",
      "vvv",
      "vvvv",
    ],
    "parse": [Function],
    "type": "option",
  },
  "log.min": Object {
    "allowNo": true,
    "default": true,
    "description": "remove formatting from logged objects",
    "parse": [Function],
    "type": "boolean",
  },
  "log.papertrail": Object {
    "allowNo": true,
    "default": true,
    "description": "preserve logger output",
    "parse": [Function],
    "type": "boolean",
  },
  "log.secret": Object {
    "default": Array [
      Any<String>,
    ],
    "description": "hide matching strings from logging output",
    "input": Array [],
    "multiple": true,
    "parse": [Function],
    "type": "option",
  },
  "manifest": Object {
    "allowNo": true,
    "default": true,
    "description": "emit manifest.json",
    "parse": [Function],
    "type": "boolean",
  },
  "minimize": Object {
    "allowNo": true,
    "description": "minimize file size of compiled assets",
    "parse": [Function],
    "type": "boolean",
  },
  "mode": Object {
    "default": "production",
    "description": "compiler mode",
    "hidden": true,
    "input": Array [],
    "multiple": false,
    "options": Array [
      "development",
      "production",
    ],
    "parse": [Function],
    "type": "option",
  },
  "runtime": Object {
    "allowNo": true,
    "description": "Create a runtime chunk",
    "parse": [Function],
    "type": "boolean",
  },
  "splitChunks": Object {
    "allowNo": true,
    "description": "create separate chunks for vendor and app code",
    "parse": [Function],
    "type": "boolean",
  },
  "target": Object {
    "default": Array [],
    "description": "limit compilation to this compiler",
    "input": Array [],
    "multiple": true,
    "parse": [Function],
    "type": "option",
  },
  "vendor": Object {
    "allowNo": true,
    "description": "create separate chunks for vendor and app code; alias for splitChunks",
    "parse": [Function],
    "type": "boolean",
  },
  "version": Object {
    "allowNo": false,
    "description": "Show CLI version.",
    "parse": [Function],
    "type": "boolean",
  },
}
`;
